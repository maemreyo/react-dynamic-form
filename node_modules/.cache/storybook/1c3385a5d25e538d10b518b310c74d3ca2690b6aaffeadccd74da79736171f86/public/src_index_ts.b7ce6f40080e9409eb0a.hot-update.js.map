{"version":3,"file":"src_index_ts.b7ce6f40080e9409eb0a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAUA;AAEA;AACA;AACA;AAeA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAEA;ACCA;AAAA;AAAA","sources":["webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/InputRenderer.tsx","webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/InputRenderer.tsx?0fdf"],"sourcesContent":["// src/features/inputs/components/InputRenderer.tsx\nimport React from 'react';\nimport {\n  FormField,\n  FormConfig,\n  FormClassNameConfig,\n  RenderLabelProps,\n  RenderErrorMessageProps,\n  InputComponentMap,\n  FieldClassNameConfig,\n} from '../../dynamic-form/types';\nimport { getInputComponent } from '../registry/InputRegistry';\nimport { CommonInputProps, CustomInputProps } from '../types';\nimport { ErrorMessage } from '../../../styles';\nimport { mergeClassNames } from '../../dynamic-form/utils/formUtils'; // Import hàm mergeClassNames\nimport { useFormContext } from 'react-hook-form';\n\ninterface InputRendererProps {\n  field: FormField;\n  config: FormConfig;\n  formClassNameConfig: FormClassNameConfig;\n  disableAutocomplete?: boolean;\n  showInlineError?: boolean;\n  horizontalLabel?: boolean;\n  labelWidth?: string | number;\n  renderLabel?: RenderLabelProps;\n  renderErrorMessage?: RenderErrorMessageProps;\n  customInputs?: InputComponentMap;\n}\n\nconst InputRenderer: React.FC<InputRendererProps> = ({\n  field,\n  config,\n  formClassNameConfig,\n  disableAutocomplete,\n  showInlineError,\n  horizontalLabel,\n  labelWidth,\n  renderErrorMessage,\n  customInputs,\n}) => {\n  const { id, type, error } = field;\n  const fieldConfig = config[id] || {};\n  const form = useFormContext();\n\n  const CustomInputComponent = customInputs?.[type];\n  const RegisteredInputComponent = getInputComponent(type);\n  const InputComponent = CustomInputComponent || RegisteredInputComponent;\n\n  // Merge class names\n  const mergedFormClassNameConfig = mergeClassNames(\n    fieldConfig,\n    form.formState,\n    {},\n    formClassNameConfig,\n    fieldConfig.classNameConfig\n  );\n\n  const commonInputProps: CommonInputProps = {\n    id,\n    fieldConfig,\n    formClassNameConfig: mergedFormClassNameConfig, // Truyền mergedFormClassNameConfig thay vì formClassNameConfig\n    showInlineError,\n    horizontalLabel,\n    labelWidth,\n    error,\n    disableAutocomplete,\n  };\n\n  // Render error message using renderErrorMessage prop or default\n  const errorMessageElement =\n    showInlineError && error && renderErrorMessage\n      ? renderErrorMessage(error, mergedFormClassNameConfig) // Sử dụng mergedFormClassNameConfig\n      : showInlineError && error\n      ? React.createElement(ErrorMessage, {\n          className: mergedFormClassNameConfig.errorMessage, // Sử dụng mergedFormClassNameConfig\n          children: error.message,\n        })\n      : null;\n\n  if (!InputComponent) {\n    console.warn(`No input component found for type: ${type}`);\n    return null;\n  }\n\n  return (\n    <>\n      {/* Cast to CustomInputProps for custom components */}\n      <InputComponent {...(commonInputProps as CustomInputProps)} />\n      {errorMessageElement}\n    </>\n  );\n};\n\nexport default InputRenderer;\n","// src/features/inputs/components/InputRenderer.tsx\nimport React from 'react';\nimport {\n  FormField,\n  FormConfig,\n  FormClassNameConfig,\n  RenderLabelProps,\n  RenderErrorMessageProps,\n  InputComponentMap,\n  FieldClassNameConfig,\n} from '../../dynamic-form/types';\nimport { getInputComponent } from '../registry/InputRegistry';\nimport { CommonInputProps, CustomInputProps } from '../types';\nimport { ErrorMessage } from '../../../styles';\nimport { mergeClassNames } from '../../dynamic-form/utils/formUtils'; // Import hàm mergeClassNames\nimport { useFormContext } from 'react-hook-form';\n\ninterface InputRendererProps {\n  field: FormField;\n  config: FormConfig;\n  formClassNameConfig: FormClassNameConfig;\n  disableAutocomplete?: boolean;\n  showInlineError?: boolean;\n  horizontalLabel?: boolean;\n  labelWidth?: string | number;\n  renderLabel?: RenderLabelProps;\n  renderErrorMessage?: RenderErrorMessageProps;\n  customInputs?: InputComponentMap;\n}\n\nconst InputRenderer: React.FC<InputRendererProps> = ({\n  field,\n  config,\n  formClassNameConfig,\n  disableAutocomplete,\n  showInlineError,\n  horizontalLabel,\n  labelWidth,\n  renderErrorMessage,\n  customInputs,\n}) => {\n  const { id, type, error } = field;\n  const fieldConfig = config[id] || {};\n  const form = useFormContext();\n\n  const CustomInputComponent = customInputs?.[type];\n  const RegisteredInputComponent = getInputComponent(type);\n  const InputComponent = CustomInputComponent || RegisteredInputComponent;\n\n  // Merge class names\n  const mergedFormClassNameConfig = mergeClassNames(\n    fieldConfig,\n    form.formState,\n    {},\n    formClassNameConfig,\n    fieldConfig.classNameConfig\n  );\n\n  const commonInputProps: CommonInputProps = {\n    id,\n    fieldConfig,\n    formClassNameConfig: mergedFormClassNameConfig, // Truyền mergedFormClassNameConfig thay vì formClassNameConfig\n    showInlineError,\n    horizontalLabel,\n    labelWidth,\n    error,\n    disableAutocomplete,\n  };\n\n  // Render error message using renderErrorMessage prop or default\n  const errorMessageElement =\n    showInlineError && error && renderErrorMessage\n      ? renderErrorMessage(error, mergedFormClassNameConfig) // Sử dụng mergedFormClassNameConfig\n      : showInlineError && error\n      ? React.createElement(ErrorMessage, {\n          className: mergedFormClassNameConfig.errorMessage, // Sử dụng mergedFormClassNameConfig\n          children: error.message,\n        })\n      : null;\n\n  if (!InputComponent) {\n    console.warn(`No input component found for type: ${type}`);\n    return null;\n  }\n\n  return (\n    <>\n      {/* Cast to CustomInputProps for custom components */}\n      <InputComponent {...(commonInputProps as CustomInputProps)} />\n      {errorMessageElement}\n    </>\n  );\n};\n\nexport default InputRenderer;\n;InputRenderer.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"InputRenderer\",\"props\":{\"field\":{\"required\":true,\"tsType\":{\"name\":\"FormField\"},\"description\":\"\"},\"config\":{\"required\":true,\"tsType\":{\"name\":\"FormConfig\"},\"description\":\"\"},\"formClassNameConfig\":{\"required\":true,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"\"},\"renderLabel\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"function\",\"raw\":\"(\\n  fieldConfig: FieldConfig,\\n  commonInputProps: CommonInputProps\\n) => React.ReactNode\",\"signature\":{\"arguments\":[{\"type\":{\"name\":\"FieldConfig\"},\"name\":\"fieldConfig\"},{\"type\":{\"name\":\"CommonInputProps\"},\"name\":\"commonInputProps\"}],\"return\":{\"name\":\"ReactReactNode\",\"raw\":\"React.ReactNode\"}}},\"description\":\"\"},\"renderErrorMessage\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"function\",\"raw\":\"(\\n  error: FieldError | undefined,\\n  formClassNameConfig: FormClassNameConfig | undefined\\n) => React.ReactNode\",\"signature\":{\"arguments\":[{\"type\":{\"name\":\"union\",\"raw\":\"FieldError | undefined\",\"elements\":[{\"name\":\"FieldError\"},{\"name\":\"undefined\"}]},\"name\":\"error\"},{\"type\":{\"name\":\"union\",\"raw\":\"FormClassNameConfig | undefined\",\"elements\":[{\"name\":\"FormClassNameConfig\"},{\"name\":\"undefined\"}]},\"name\":\"formClassNameConfig\"}],\"return\":{\"name\":\"ReactReactNode\",\"raw\":\"React.ReactNode\"}}},\"description\":\"\"},\"customInputs\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"object\",\"raw\":\"{\\n  [key: string]: React.ComponentType<CustomInputProps>;\\n}\",\"signature\":{\"properties\":[{\"key\":{\"name\":\"string\"},\"value\":{\"name\":\"ReactComponentType\",\"raw\":\"React.ComponentType<CustomInputProps>\",\"elements\":[{\"name\":\"CustomInputProps\"}],\"required\":true}}]}},\"description\":\"\"}}};InputRenderer.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"InputRenderer\",\"props\":{\"field\":{\"required\":true,\"tsType\":{\"name\":\"FormField\"},\"description\":\"\"},\"config\":{\"required\":true,\"tsType\":{\"name\":\"FormConfig\"},\"description\":\"\"},\"formClassNameConfig\":{\"required\":true,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"\"},\"renderLabel\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"function\",\"raw\":\"(\\n  fieldConfig: FieldConfig,\\n  commonInputProps: CommonInputProps\\n) => React.ReactNode\",\"signature\":{\"arguments\":[{\"type\":{\"name\":\"FieldConfig\"},\"name\":\"fieldConfig\"},{\"type\":{\"name\":\"CommonInputProps\"},\"name\":\"commonInputProps\"}],\"return\":{\"name\":\"ReactReactNode\",\"raw\":\"React.ReactNode\"}}},\"description\":\"\"},\"renderErrorMessage\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"function\",\"raw\":\"(\\n  error: FieldError | undefined,\\n  formClassNameConfig: FormClassNameConfig | undefined\\n) => React.ReactNode\",\"signature\":{\"arguments\":[{\"type\":{\"name\":\"union\",\"raw\":\"FieldError | undefined\",\"elements\":[{\"name\":\"FieldError\"},{\"name\":\"undefined\"}]},\"name\":\"error\"},{\"type\":{\"name\":\"union\",\"raw\":\"FormClassNameConfig | undefined\",\"elements\":[{\"name\":\"FormClassNameConfig\"},{\"name\":\"undefined\"}]},\"name\":\"formClassNameConfig\"}],\"return\":{\"name\":\"ReactReactNode\",\"raw\":\"React.ReactNode\"}}},\"description\":\"\"},\"customInputs\":{\"required\":false,\"tsType\":{\"name\":\"signature\",\"type\":\"object\",\"raw\":\"{\\n  [key: string]: React.ComponentType<CustomInputProps>;\\n}\",\"signature\":{\"properties\":[{\"key\":{\"name\":\"string\"},\"value\":{\"name\":\"ReactComponentType\",\"raw\":\"React.ComponentType<CustomInputProps>\",\"elements\":[{\"name\":\"CustomInputProps\"}],\"required\":true}}]}},\"description\":\"\"}}}"],"names":[],"sourceRoot":""}