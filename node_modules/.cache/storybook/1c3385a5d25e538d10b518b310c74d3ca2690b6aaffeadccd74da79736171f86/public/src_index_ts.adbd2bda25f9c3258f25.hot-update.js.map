{"version":3,"file":"src_index_ts.adbd2bda25f9c3258f25.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAGA;AACA;AAEA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AASA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAOA;AAOA;AAGA;AAOA;AAEA;ACCA;AAAA;AAAA","sources":["webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/CheckboxInput.tsx","webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/CheckboxInput.tsx?866a"],"sourcesContent":["// Filepath: /src/features/inputs/components/CheckboxInput.tsx\n\nimport React from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { CommonInputProps } from '../types';\nimport { FormValues } from '../../dynamic-form';\nimport { Label, InputWrapper, ErrorMessage } from '../../../styles';\nimport styled from 'styled-components';\n\nconst CheckboxInputStyled = styled.input<{ className?: string }>`\n  appearance: none;\n  width: 16px;\n  height: 16px;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  &:hover {\n    border-color: ${({ theme }) => theme.colors['info-700']};\n  }\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.info};\n    border-color: ${({ theme }) => theme.colors.info};\n  }\n  &:checked::after {\n    content: '✔';\n    display: block;\n    text-align: center;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 16px;\n    color: ${({ theme }) => theme.colors.white};\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.info};\n  }\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n`;\n\nconst CheckboxInput: React.FC<CommonInputProps> = ({\n  id,\n  fieldConfig,\n  formClassNameConfig = {},\n  showInlineError,\n  horizontalLabel,\n  labelWidth,\n  error,\n}) => {\n  const { label } = fieldConfig;\n  const { control } = useFormContext<FormValues>();\n  const { field } = useController({\n    name: id,\n    control,\n    rules: fieldConfig.validation as any,\n    defaultValue: fieldConfig.defaultValue,\n  });\n  return (\n    <InputWrapper\n      $horizontalLabel={horizontalLabel}\n      $labelWidth={labelWidth}\n      className={formClassNameConfig.inputWrapper}\n    >\n      {label && (\n        <Label\n          htmlFor={id}\n          $horizontalLabel={horizontalLabel}\n          $labelWidth={labelWidth}\n          className={formClassNameConfig.label}\n        >\n          <CheckboxInputStyled\n            {...field}\n            className={formClassNameConfig.checkboxInput}\n            type=\"checkbox\"\n            id={id}\n            checked={!!field.value}\n          />\n          {label}\n        </Label>\n      )}\n      {showInlineError && error && (\n        <ErrorMessage className={formClassNameConfig.errorMessage}>\n          {error.message}\n        </ErrorMessage>\n      )}\n    </InputWrapper>\n  );\n};\n\nexport default CheckboxInput;\n","// Filepath: /src/features/inputs/components/CheckboxInput.tsx\n\nimport React from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { CommonInputProps } from '../types';\nimport { FormValues } from '../../dynamic-form';\nimport { Label, InputWrapper, ErrorMessage } from '../../../styles';\nimport styled from 'styled-components';\n\nconst CheckboxInputStyled = styled.input<{ className?: string }>`\n  appearance: none;\n  width: 16px;\n  height: 16px;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.radii.sm};\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  &:hover {\n    border-color: ${({ theme }) => theme.colors['info-700']};\n  }\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.info};\n    border-color: ${({ theme }) => theme.colors.info};\n  }\n  &:checked::after {\n    content: '✔';\n    display: block;\n    text-align: center;\n    font-size: ${({ theme }) => theme.fontSizes.small};\n    line-height: 16px;\n    color: ${({ theme }) => theme.colors.white};\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.info};\n  }\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n`;\n\nconst CheckboxInput: React.FC<CommonInputProps> = ({\n  id,\n  fieldConfig,\n  formClassNameConfig = {},\n  showInlineError,\n  horizontalLabel,\n  labelWidth,\n  error,\n}) => {\n  const { label } = fieldConfig;\n  const { control } = useFormContext<FormValues>();\n  const { field } = useController({\n    name: id,\n    control,\n    rules: fieldConfig.validation as any,\n    defaultValue: fieldConfig.defaultValue,\n  });\n  return (\n    <InputWrapper\n      $horizontalLabel={horizontalLabel}\n      $labelWidth={labelWidth}\n      className={formClassNameConfig.inputWrapper}\n    >\n      {label && (\n        <Label\n          htmlFor={id}\n          $horizontalLabel={horizontalLabel}\n          $labelWidth={labelWidth}\n          className={formClassNameConfig.label}\n        >\n          <CheckboxInputStyled\n            {...field}\n            className={formClassNameConfig.checkboxInput}\n            type=\"checkbox\"\n            id={id}\n            checked={!!field.value}\n          />\n          {label}\n        </Label>\n      )}\n      {showInlineError && error && (\n        <ErrorMessage className={formClassNameConfig.errorMessage}>\n          {error.message}\n        </ErrorMessage>\n      )}\n    </InputWrapper>\n  );\n};\n\nexport default CheckboxInput;\n;CheckboxInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"CheckboxInput\",\"props\":{\"id\":{\"required\":true,\"tsType\":{\"name\":\"string\"},\"description\":\"\"},\"fieldConfig\":{\"required\":true,\"tsType\":{\"name\":\"FieldConfig\"},\"description\":\"\"},\"formClassNameConfig\":{\"required\":false,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"\",\"defaultValue\":{\"value\":\"{}\",\"computed\":false}},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"\"},\"error\":{\"required\":false,\"tsType\":{\"name\":\"FieldError\"},\"description\":\"\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"}}};CheckboxInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"CheckboxInput\",\"props\":{\"id\":{\"required\":true,\"tsType\":{\"name\":\"string\"},\"description\":\"\"},\"fieldConfig\":{\"required\":true,\"tsType\":{\"name\":\"FieldConfig\"},\"description\":\"\"},\"formClassNameConfig\":{\"required\":false,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"\",\"defaultValue\":{\"value\":\"{}\",\"computed\":false}},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"\"},\"error\":{\"required\":false,\"tsType\":{\"name\":\"FieldError\"},\"description\":\"\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"\"}}}"],"names":[],"sourceRoot":""}