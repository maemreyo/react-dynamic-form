"use strict";
(self["webpackChunk_matthew_ngo_react_dynamic_form"] = self["webpackChunk_matthew_ngo_react_dynamic_form"] || []).push([["src_index_ts"],{

/***/ "./src/DynamicForm.tsx":
/*!*****************************!*\
  !*** ./src/DynamicForm.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _features_dynamic_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./features/dynamic-form */ "./src/features/dynamic-form/index.ts");
/* harmony import */ var _features_form_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./features/form-renderer */ "./src/features/form-renderer/index.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles */ "./src/styles.ts");
/* harmony import */ var _features_inputs_registry_components_FlexLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./features/inputs/registry/components/FlexLayout */ "./src/features/inputs/registry/components/FlexLayout.tsx");
/* harmony import */ var _features_inputs_registry_components_GridLayout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./features/inputs/registry/components/GridLayout */ "./src/features/inputs/registry/components/GridLayout.tsx");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components */ "./src/components/index.ts");
// Filepath: /src/DynamicForm.tsx








var DynamicForm = function (_a) {
    var _b = _a.config, config = _b === void 0 ? {} : _b, onChange = _a.onChange, onSubmit = _a.onSubmit, formOptions = _a.formOptions, header = _a.header, footer = _a.footer, _c = _a.readOnly, readOnly = _c === void 0 ? false : _c, _d = _a.disableForm, disableForm = _d === void 0 ? false : _d, _e = _a.showSubmitButton, showSubmitButton = _e === void 0 ? true : _e, autoSave = _a.autoSave, _f = _a.resetOnSubmit, resetOnSubmit = _f === void 0 ? false : _f, _g = _a.focusFirstError, focusFirstError = _g === void 0 ? false : _g, className = _a.className, _h = _a.formClassNameConfig, formClassNameConfig = _h === void 0 ? {} : _h, style = _a.style, renderLayout = _a.renderLayout, _j = _a.layout, layout = _j === void 0 ? 'grid' : _j, _k = _a.layoutConfig, layoutConfig = _k === void 0 ? {
        minWidth: '300px',
    } : _k, // Default layoutConfig
    _l = _a.horizontalLabel, // Default layoutConfig
    horizontalLabel = _l === void 0 ? false : _l, labelWidth = _a.labelWidth, _m = _a.enableLocalStorage, enableLocalStorage = _m === void 0 ? false : _m, _o = _a.debounceOnChange, debounceOnChange = _o === void 0 ? 0 : _o, _p = _a.disableAutocomplete, disableAutocomplete = _p === void 0 ? false : _p, _q = _a.showInlineError, showInlineError = _q === void 0 ? true : _q, _r = _a.showErrorSummary, showErrorSummary = _r === void 0 ? false : _r, _s = _a.validateOnBlur, validateOnBlur = _s === void 0 ? false : _s, _t = _a.validateOnChange, validateOnChange = _t === void 0 ? true : _t, _u = _a.validateOnSubmit, validateOnSubmit = _u === void 0 ? true : _u, theme = _a.theme, customInputs = _a.customInputs, onFormReady = _a.onFormReady, renderSubmitButton = _a.renderSubmitButton, onError = _a.onError, renderErrorSummary = _a.renderErrorSummary, validationMessages = _a.validationMessages;
    var mergedFormOptions = (0,_features_dynamic_form__WEBPACK_IMPORTED_MODULE_1__.useRHFOptions)(config, formOptions, validateOnSubmit, validateOnChange, validateOnBlur, validationMessages);
    var form = (0,_features_dynamic_form__WEBPACK_IMPORTED_MODULE_1__.useDynamicForm)({
        config: config,
        formOptions: mergedFormOptions,
        autoSave: autoSave,
        enableLocalStorage: enableLocalStorage,
        resetOnSubmit: resetOnSubmit,
        focusFirstError: focusFirstError,
        debounceOnChange: debounceOnChange,
        onChange: onChange,
        onFormReady: onFormReady,
    });
    var formState = form.formState, control = form.control, handleSubmit = form.handleSubmit;
    var _v = (0,_features_dynamic_form__WEBPACK_IMPORTED_MODULE_1__.useFormFields)(config, formState, control, validationMessages), fields = _v.fields, fieldsToRender = _v.fieldsToRender, conditionalFieldsConfig = _v.conditionalFieldsConfig;
    var onSubmitHandler = function () {
        handleSubmit(function (data) {
            if (onSubmit) {
                onSubmit(data);
            }
        }, function (errors) {
            if (onError) {
                onError(errors);
            }
        })();
    };
    var defaultRenderErrorSummary = function (errors, formClassNameConfig) {
        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_7__.ErrorSummary, { errors: errors, formClassNameConfig: formClassNameConfig }));
    };
    var LayoutComponent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        if (renderLayout) {
            return renderLayout;
        }
        if (layout === 'flex') {
            return _features_inputs_registry_components_FlexLayout__WEBPACK_IMPORTED_MODULE_5__.FlexLayout;
        }
        return _features_inputs_registry_components_GridLayout__WEBPACK_IMPORTED_MODULE_6__.GridLayout;
    }, [renderLayout, layout]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__["default"], { theme: theme || {} },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_features_dynamic_form__WEBPACK_IMPORTED_MODULE_1__.DynamicFormProvider, { form: form },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LayoutComponent, { onSubmit: onSubmitHandler, className: className, formClassNameConfig: formClassNameConfig, style: style, layout: layout, layoutConfig: layoutConfig, horizontalLabel: horizontalLabel },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_features_form_renderer__WEBPACK_IMPORTED_MODULE_2__.FormRenderer, { onSubmit: onSubmitHandler, className: className, formClassNameConfig: formClassNameConfig, style: style, layout: layout, layoutConfig: layoutConfig, horizontalLabel: horizontalLabel, theme: theme, header: header, fieldsToRender: fieldsToRender, fields: fields, config: config, footer: footer, readOnly: readOnly, disableForm: disableForm, showSubmitButton: showSubmitButton, renderSubmitButton: renderSubmitButton, formOptions: formOptions, showErrorSummary: showErrorSummary, labelWidth: labelWidth, disableAutocomplete: disableAutocomplete, showInlineError: showInlineError, conditionalFieldsConfig: conditionalFieldsConfig, customInputs: customInputs, renderErrorSummary: renderErrorSummary || defaultRenderErrorSummary })),
            showSubmitButton &&
                (renderSubmitButton ? (renderSubmitButton(onSubmitHandler, formState.isSubmitting)) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_4__.SubmitButton, { type: "submit", onClick: onSubmitHandler, disabled: formState.isSubmitting, className: formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.button }, "Submit"))))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DynamicForm);
;
DynamicForm.__docgenInfo = { "description": "", "methods": [], "displayName": "DynamicForm", "props": { "config": { "required": false, "tsType": { "name": "FormConfig" }, "description": "The form configuration.", "defaultValue": { "value": "{}", "computed": false } }, "onChange": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(formData: FormValues) => void", "signature": { "arguments": [{ "type": { "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }, "name": "formData" }], "return": { "name": "void" } } }, "description": "Optional callback function to be called when the form data changes." }, "onSubmit": { "required": false, "tsType": { "name": "SubmitHandler", "elements": [{ "name": "FieldValues" }], "raw": "SubmitHandler<FieldValues>" }, "description": "Optional callback function to be called when the form is submitted." }, "formOptions": { "required": false, "tsType": { "name": "UseFormProps" }, "description": "Optional options for react-hook-form's useForm hook." }, "validationSchema": { "required": false, "tsType": { "name": "Schema", "elements": [{ "name": "any" }], "raw": "Schema<any>" }, "description": "Optional Yup schema for form validation." }, "header": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional header element for the form." }, "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional footer element for the form." }, "readOnly": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether the form is read-only.", "defaultValue": { "value": "false", "computed": false } }, "disableForm": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether the form is disabled.", "defaultValue": { "value": "false", "computed": false } }, "showSubmitButton": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show the submit button.", "defaultValue": { "value": "true", "computed": false } }, "autoSave": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  interval: number;\n  save: (data: Record<string, any>) => void;\n}", "signature": { "properties": [{ "key": "interval", "value": { "name": "number", "required": true } }, { "key": "save", "value": { "name": "signature", "type": "function", "raw": "(data: Record<string, any>) => void", "signature": { "arguments": [{ "type": { "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }, "name": "data" }], "return": { "name": "void" } }, "required": true } }] } }, "description": "Optional auto-save configuration." }, "resetOnSubmit": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to reset the form on submit.", "defaultValue": { "value": "false", "computed": false } }, "focusFirstError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to focus on the first error field on submit.", "defaultValue": { "value": "false", "computed": false } }, "layout": { "required": false, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "The layout type for the form.", "defaultValue": { "value": "'grid'", "computed": false } }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "Optional layout configuration.", "defaultValue": { "value": "{\n  minWidth: '300px',\n}", "computed": false } }, "renderLayout": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  children: React.ReactNode;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n  formClassNameConfig?: FormClassNameConfig;\n  style?: React.CSSProperties;\n  layout: LayoutType;\n  layoutConfig?: any;\n  horizontalLabel?: boolean;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  children: React.ReactNode;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n  formClassNameConfig?: FormClassNameConfig;\n  style?: React.CSSProperties;\n  layout: LayoutType;\n  layoutConfig?: any;\n  horizontalLabel?: boolean;\n}", "signature": { "properties": [{ "key": "children", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": true } }, { "key": "onSubmit", "value": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } }, "required": true } }, { "key": "className", "value": { "name": "string", "required": false } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }, { "key": "style", "value": { "name": "ReactCSSProperties", "raw": "React.CSSProperties", "required": false } }, { "key": "layout", "value": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }], "required": true } }, { "key": "layoutConfig", "value": { "name": "any", "required": false } }, { "key": "horizontalLabel", "value": { "name": "boolean", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom layout renderer." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use horizontal labels.", "defaultValue": { "value": "false", "computed": false } }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "enableLocalStorage": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to enable local storage for the form data.", "defaultValue": { "value": "false", "computed": false } }, "debounceOnChange": { "required": false, "tsType": { "name": "number" }, "description": "Optional debounce time (in ms) for the onChange callback.", "defaultValue": { "value": "0", "computed": false } }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the form.", "defaultValue": { "value": "false", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages.", "defaultValue": { "value": "true", "computed": false } }, "showErrorSummary": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show an error summary.", "defaultValue": { "value": "false", "computed": false } }, "validateOnBlur": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on blur.", "defaultValue": { "value": "false", "computed": false } }, "validateOnChange": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on change.", "defaultValue": { "value": "true", "computed": false } }, "validateOnSubmit": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on submit.", "defaultValue": { "value": "true", "computed": false } }, "className": { "required": false, "tsType": { "name": "string" }, "description": "Optional CSS class name for the form container." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "Optional inline styles for the form container." }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "Optional theme object." }, "onFormReady": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(form: UseFormReturn<any>) => void", "signature": { "arguments": [{ "type": { "name": "UseFormReturn", "elements": [{ "name": "any" }], "raw": "UseFormReturn<any>" }, "name": "form" }], "return": { "name": "void" } } }, "description": "Optional callback function to be called when the form is ready." }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom submit button renderer." }, "renderFormContent": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  props: Omit<FormContentProps, 'renderInput'> & {\n    renderInput: RenderInputProps;\n  }\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "intersection", "raw": "Omit<FormContentProps, 'renderInput'> & {\n  renderInput: RenderInputProps;\n}", "elements": [{ "name": "Omit", "elements": [{ "name": "FormContentProps" }, { "name": "literal", "value": "'renderInput'" }], "raw": "Omit<FormContentProps, 'renderInput'>" }, { "name": "signature", "type": "object", "raw": "{\n  renderInput: RenderInputProps;\n}", "signature": { "properties": [{ "key": "renderInput", "value": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }] } }] }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom form content renderer." }, "renderFormFooter": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}", "signature": { "properties": [{ "key": "footer", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": false } }, { "key": "showSubmitButton", "value": { "name": "boolean", "required": true } }, { "key": "renderSubmitButton", "value": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }, { "key": "isSubmitting", "value": { "name": "boolean", "required": true } }, { "key": "showErrorSummary", "value": { "name": "boolean", "required": true } }, { "key": "errors", "value": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>", "required": true } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom form footer renderer." }, "customValidators": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: (value: any, context: any) => string | undefined;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "signature", "type": "function", "raw": "(value: any, context: any) => string | undefined", "signature": { "arguments": [{ "type": { "name": "any" }, "name": "value" }, { "type": { "name": "any" }, "name": "context" }], "return": { "name": "union", "raw": "string | undefined", "elements": [{ "name": "string" }, { "name": "undefined" }] } }, "required": true } }] } }, "description": "Optional custom validators." }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "Optional custom input components." }, "onError": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(errors: FieldErrors) => void", "signature": { "arguments": [{ "type": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "name": "errors" }], "return": { "name": "void" } } }, "description": "Optional error handler function." }, "renderErrorSummary": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  errors: FieldErrors,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "name": "errors" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom error summary renderer." }, "validationMessages": { "required": false, "tsType": { "name": "ValidationMessages" }, "description": "Optional custom validation messages." } } };
DynamicForm.__docgenInfo = { "description": "", "methods": [], "displayName": "DynamicForm", "props": { "config": { "required": false, "tsType": { "name": "FormConfig" }, "description": "The form configuration.", "defaultValue": { "value": "{}", "computed": false } }, "onChange": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(formData: FormValues) => void", "signature": { "arguments": [{ "type": { "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }, "name": "formData" }], "return": { "name": "void" } } }, "description": "Optional callback function to be called when the form data changes." }, "onSubmit": { "required": false, "tsType": { "name": "SubmitHandler", "elements": [{ "name": "FieldValues" }], "raw": "SubmitHandler<FieldValues>" }, "description": "Optional callback function to be called when the form is submitted." }, "formOptions": { "required": false, "tsType": { "name": "UseFormProps" }, "description": "Optional options for react-hook-form's useForm hook." }, "validationSchema": { "required": false, "tsType": { "name": "Schema", "elements": [{ "name": "any" }], "raw": "Schema<any>" }, "description": "Optional Yup schema for form validation." }, "header": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional header element for the form." }, "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional footer element for the form." }, "readOnly": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether the form is read-only.", "defaultValue": { "value": "false", "computed": false } }, "disableForm": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether the form is disabled.", "defaultValue": { "value": "false", "computed": false } }, "showSubmitButton": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show the submit button.", "defaultValue": { "value": "true", "computed": false } }, "autoSave": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  interval: number;\n  save: (data: Record<string, any>) => void;\n}", "signature": { "properties": [{ "key": "interval", "value": { "name": "number", "required": true } }, { "key": "save", "value": { "name": "signature", "type": "function", "raw": "(data: Record<string, any>) => void", "signature": { "arguments": [{ "type": { "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }, "name": "data" }], "return": { "name": "void" } }, "required": true } }] } }, "description": "Optional auto-save configuration." }, "resetOnSubmit": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to reset the form on submit.", "defaultValue": { "value": "false", "computed": false } }, "focusFirstError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to focus on the first error field on submit.", "defaultValue": { "value": "false", "computed": false } }, "layout": { "required": false, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "The layout type for the form.", "defaultValue": { "value": "'grid'", "computed": false } }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "Optional layout configuration.", "defaultValue": { "value": "{\n  minWidth: '300px',\n}", "computed": false } }, "renderLayout": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  children: React.ReactNode;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n  formClassNameConfig?: FormClassNameConfig;\n  style?: React.CSSProperties;\n  layout: LayoutType;\n  layoutConfig?: any;\n  horizontalLabel?: boolean;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  children: React.ReactNode;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  className?: string;\n  formClassNameConfig?: FormClassNameConfig;\n  style?: React.CSSProperties;\n  layout: LayoutType;\n  layoutConfig?: any;\n  horizontalLabel?: boolean;\n}", "signature": { "properties": [{ "key": "children", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": true } }, { "key": "onSubmit", "value": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } }, "required": true } }, { "key": "className", "value": { "name": "string", "required": false } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }, { "key": "style", "value": { "name": "ReactCSSProperties", "raw": "React.CSSProperties", "required": false } }, { "key": "layout", "value": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }], "required": true } }, { "key": "layoutConfig", "value": { "name": "any", "required": false } }, { "key": "horizontalLabel", "value": { "name": "boolean", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom layout renderer." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use horizontal labels.", "defaultValue": { "value": "false", "computed": false } }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "enableLocalStorage": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to enable local storage for the form data.", "defaultValue": { "value": "false", "computed": false } }, "debounceOnChange": { "required": false, "tsType": { "name": "number" }, "description": "Optional debounce time (in ms) for the onChange callback.", "defaultValue": { "value": "0", "computed": false } }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the form.", "defaultValue": { "value": "false", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages.", "defaultValue": { "value": "true", "computed": false } }, "showErrorSummary": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show an error summary.", "defaultValue": { "value": "false", "computed": false } }, "validateOnBlur": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on blur.", "defaultValue": { "value": "false", "computed": false } }, "validateOnChange": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on change.", "defaultValue": { "value": "true", "computed": false } }, "validateOnSubmit": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to validate on submit.", "defaultValue": { "value": "true", "computed": false } }, "className": { "required": false, "tsType": { "name": "string" }, "description": "Optional CSS class name for the form container." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "Optional inline styles for the form container." }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "Optional theme object." }, "onFormReady": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(form: UseFormReturn<any>) => void", "signature": { "arguments": [{ "type": { "name": "UseFormReturn", "elements": [{ "name": "any" }], "raw": "UseFormReturn<any>" }, "name": "form" }], "return": { "name": "void" } } }, "description": "Optional callback function to be called when the form is ready." }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom submit button renderer." }, "renderFormContent": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  props: Omit<FormContentProps, 'renderInput'> & {\n    renderInput: RenderInputProps;\n  }\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "intersection", "raw": "Omit<FormContentProps, 'renderInput'> & {\n  renderInput: RenderInputProps;\n}", "elements": [{ "name": "Omit", "elements": [{ "name": "FormContentProps" }, { "name": "literal", "value": "'renderInput'" }], "raw": "Omit<FormContentProps, 'renderInput'>" }, { "name": "signature", "type": "object", "raw": "{\n  renderInput: RenderInputProps;\n}", "signature": { "properties": [{ "key": "renderInput", "value": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }] } }] }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom form content renderer." }, "renderFormFooter": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}", "signature": { "properties": [{ "key": "footer", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": false } }, { "key": "showSubmitButton", "value": { "name": "boolean", "required": true } }, { "key": "renderSubmitButton", "value": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }, { "key": "isSubmitting", "value": { "name": "boolean", "required": true } }, { "key": "showErrorSummary", "value": { "name": "boolean", "required": true } }, { "key": "errors", "value": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>", "required": true } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom form footer renderer." }, "customValidators": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: (value: any, context: any) => string | undefined;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "signature", "type": "function", "raw": "(value: any, context: any) => string | undefined", "signature": { "arguments": [{ "type": { "name": "any" }, "name": "value" }, { "type": { "name": "any" }, "name": "context" }], "return": { "name": "union", "raw": "string | undefined", "elements": [{ "name": "string" }, { "name": "undefined" }] } }, "required": true } }] } }, "description": "Optional custom validators." }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "Optional custom input components." }, "onError": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(errors: FieldErrors) => void", "signature": { "arguments": [{ "type": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "name": "errors" }], "return": { "name": "void" } } }, "description": "Optional error handler function." }, "renderErrorSummary": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  errors: FieldErrors,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "name": "errors" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom error summary renderer." }, "validationMessages": { "required": false, "tsType": { "name": "ValidationMessages" }, "description": "Optional custom validation messages." } } };


/***/ }),

/***/ "./src/components/ErrorMessage/index.ts":
/*!**********************************************!*\
  !*** ./src/components/ErrorMessage/index.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorMessage: () => (/* binding */ ErrorMessage)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/ErrorMessage/index.ts

/**
 * Styled error message.
 */
var ErrorMessage = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  color: ", ";\n  font-size: ", ";\n  margin-top: ", ";\n  display: block; /* Th\u00EAm display block */\n"], ["\n  color: ", ";\n  font-size: ", ";\n  margin-top: ", ";\n  display: block; /* Th\u00EAm display block */\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.danger;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.small;
}, function (_a) {
    var theme = _a.theme;
    return theme.space.xs;
});
var templateObject_1;


/***/ }),

/***/ "./src/components/ErrorRenderer.tsx":
/*!******************************************!*\
  !*** ./src/components/ErrorRenderer.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");



var ErrorMessage = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__makeTemplateObject)(["\n  color: ", ";\n  font-size: ", ";\n  margin-top: ", ";\n"], ["\n  color: ", ";\n  font-size: ", ";\n  margin-top: ", ";\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.error;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.small;
}, function (_a) {
    var theme = _a.theme;
    return theme.space.xs;
});
var ErrorRenderer = function (_a) {
    var error = _a.error, formClassNameConfig = _a.formClassNameConfig, fieldConfig = _a.fieldConfig;
    var message = error.message || '';
    // Use validationMessages from fieldConfig if available
    if (fieldConfig && fieldConfig.validationMessages) {
        var template = fieldConfig.validationMessages[error.type];
        var values = {
            label: fieldConfig.label,
            value: error,
            error: error,
            config: fieldConfig,
        };
        if (typeof template === 'function') {
            message = template(values);
        }
        else if (typeof template === 'string') {
            message = template;
        }
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ErrorMessage, { className: formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.errorMessage }, message));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ErrorRenderer);
;
ErrorRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "ErrorRenderer", "props": { "error": { "required": true, "tsType": { "name": "FieldError" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "fieldConfig": { "required": false, "tsType": { "name": "FieldConfig" }, "description": "" } } };
ErrorRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "ErrorRenderer", "props": { "error": { "required": true, "tsType": { "name": "FieldError" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "fieldConfig": { "required": false, "tsType": { "name": "FieldConfig" }, "description": "" } } };
var templateObject_1;


/***/ }),

/***/ "./src/components/ErrorSummary.tsx":
/*!*****************************************!*\
  !*** ./src/components/ErrorSummary.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ErrorRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ErrorRenderer */ "./src/components/ErrorRenderer.tsx");
// src/components/ErrorSummary.tsx


var ErrorSummary = function (_a) {
    var errors = _a.errors, formClassNameConfig = _a.formClassNameConfig;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null,
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", null, "Error Summary:"),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", null, Object.entries(errors).map(function (_a) {
            var key = _a[0], error = _a[1];
            return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", { key: key },
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ErrorRenderer__WEBPACK_IMPORTED_MODULE_1__["default"], { error: error, formClassNameConfig: formClassNameConfig })));
        }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ErrorSummary);
;
ErrorSummary.__docgenInfo = { "description": "", "methods": [], "displayName": "ErrorSummary", "props": { "errors": { "required": true, "tsType": { "name": "Partial", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "FieldError" }], "raw": "Record<string, FieldError>" }], "raw": "Partial<Record<string, FieldError>>" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" } } };
ErrorSummary.__docgenInfo = { "description": "", "methods": [], "displayName": "ErrorSummary", "props": { "errors": { "required": true, "tsType": { "name": "Partial", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "FieldError" }], "raw": "Record<string, FieldError>" }], "raw": "Partial<Record<string, FieldError>>" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" } } };


/***/ }),

/***/ "./src/components/FormContainer/index.ts":
/*!***********************************************!*\
  !*** ./src/components/FormContainer/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormContainer: () => (/* binding */ FormContainer)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/FormContainer/index.ts

/**
 * Styled form container.
 */
var FormContainer = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].form(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  display: ", ";\n  flex-direction: ", ";\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n"], ["\n  display: ", ";\n  flex-direction: ", ";\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n"])), function (_a) {
    var $layout = _a.$layout;
    return ($layout === 'grid' ? 'grid' : 'flex');
}, function (_a) {
    var $layout = _a.$layout, $horizontalLabel = _a.$horizontalLabel;
    return $layout === 'grid' || $horizontalLabel ? 'row' : 'column';
}, function (_a) {
    var $layoutConfig = _a.$layoutConfig, theme = _a.theme;
    return ($layoutConfig === null || $layoutConfig === void 0 ? void 0 : $layoutConfig.gap) || theme.space.md;
}, function (_a) {
    var theme = _a.theme;
    return theme.space['3xl'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.background;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.radii.md;
});
var templateObject_1;


/***/ }),

/***/ "./src/components/GridFormContainer/index.ts":
/*!***************************************************!*\
  !*** ./src/components/GridFormContainer/index.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridFormContainer: () => (/* binding */ GridFormContainer)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _FormContainer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../FormContainer */ "./src/components/FormContainer/index.ts");

// Filepath: /src/components/GridFormContainer/index.ts
// [CONTINUE-2]


/**
 * Styled grid form container.
 */
var GridFormContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_1__["default"])(_FormContainer__WEBPACK_IMPORTED_MODULE_0__.FormContainer)(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__makeTemplateObject)(["\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(", ", 1fr)\n  );\n  gap: ", ";\n  ", "\n"], ["\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(", ", 1fr)\n  );\n  gap: ", ";\n  ", "\n"])), function (props) { return props.$minWidth || '250px'; }, function (_a) {
    var $gap = _a.$gap, theme = _a.theme;
    return $gap || theme.space.md;
}, function (props) {
    var _a = props.$breakpoints, $breakpoints = _a === void 0 ? props.theme.breakpoints : _a;
    return Object.entries($breakpoints)
        .sort(function (_a, _b) {
        var a = _a[1];
        var b = _b[1];
        return Number(a) - Number(b);
    }) // Sort breakpoints in ascending order
        .map(function (_a) {
        var value = _a[1];
        return (0,styled_components__WEBPACK_IMPORTED_MODULE_1__.css)(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__makeTemplateObject)(["\n          @media (min-width: ", "px) {\n            grid-template-columns: repeat(\n              auto-fit,\n              minmax(\n                ", ",\n                // Use prop or default minWidth\n                1fr\n              )\n            );\n          }\n        "], ["\n          @media (min-width: ", "px) {\n            grid-template-columns: repeat(\n              auto-fit,\n              minmax(\n                ", ",\n                // Use prop or default minWidth\n                1fr\n              )\n            );\n          }\n        "])), value, function (props) { return props.$minWidth || '250px'; });
    });
});
var templateObject_1, templateObject_2;


/***/ }),

/***/ "./src/components/Input/index.ts":
/*!***************************************!*\
  !*** ./src/components/Input/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Input: () => (/* binding */ Input)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/Input/index.ts

/**
 * Base styles for form elements.
 */
var baseFormElementStyles = (0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  width: 100%;\n  transition:\n    border-color 0.2s ease-in-out,\n    box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n"], ["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  width: 100%;\n  transition:\n    border-color 0.2s ease-in-out,\n    box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.small;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.text;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.sm;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.md;
});
/**
 * Styled input.
 */
var Input = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].input(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  ", "\n\n  &[type='number'] {\n    -moz-appearance: textfield; /* Firefox */\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none; /* Chrome, Safari, Edge */\n    margin: 0;\n  }\n"], ["\n  ", "\n\n  &[type='number'] {\n    -moz-appearance: textfield; /* Firefox */\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none; /* Chrome, Safari, Edge */\n    margin: 0;\n  }\n"])), baseFormElementStyles);
var templateObject_1, templateObject_2;


/***/ }),

/***/ "./src/components/InputWrapper/index.ts":
/*!**********************************************!*\
  !*** ./src/components/InputWrapper/index.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InputWrapper: () => (/* binding */ InputWrapper)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/InputWrapper/index.ts

/**
 * Styled input wrapper.
 */
var InputWrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  display: flex;\n  margin-bottom: ", ";\n  align-items: ", ";\n  flex-direction: ", ";\n\n  > :first-child {\n    margin-right: ", ";\n  }\n"], ["\n  display: flex;\n  margin-bottom: ", ";\n  align-items: ", ";\n  flex-direction: ", ";\n\n  > :first-child {\n    margin-right: ", ";\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.space['2xl'];
}, function (_a) {
    var $horizontalLabel = _a.$horizontalLabel;
    return $horizontalLabel ? 'center' : 'flex-start';
}, function (_a) {
    var $horizontalLabel = _a.$horizontalLabel;
    return $horizontalLabel ? 'row' : 'column';
}, function (_a) {
    var $horizontalLabel = _a.$horizontalLabel;
    return $horizontalLabel ? '0.5em' : '0';
});
var templateObject_1;


/***/ }),

/***/ "./src/components/Label/index.ts":
/*!***************************************!*\
  !*** ./src/components/Label/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Label: () => (/* binding */ Label)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/Label/index.ts

/**
 * Common styles for labels.
 */
var labelCommonStyles = (0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  margin-bottom: ", ";\n  margin-right: ", ";\n  color: ", ";\n  font-weight: ", ";\n  width: ", ";\n  flex-shrink: 0;\n  font-size: ", ";\n  display: block; /* Th\u00EAm display block */\n"], ["\n  margin-bottom: ", ";\n  margin-right: ", ";\n  color: ", ";\n  font-weight: ", ";\n  width: ", ";\n  flex-shrink: 0;\n  font-size: ", ";\n  display: block; /* Th\u00EAm display block */\n"])), function (_a) {
    var theme = _a.theme, $horizontalLabel = _a.$horizontalLabel;
    return $horizontalLabel ? '0' : theme.space.sm;
}, function (_a) {
    var theme = _a.theme, $horizontalLabel = _a.$horizontalLabel;
    return $horizontalLabel ? theme.space.md : '0';
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.text;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontWeights.semibold;
}, function (_a) {
    var $labelWidth = _a.$labelWidth;
    return $labelWidth
        ? typeof $labelWidth === 'number'
            ? "".concat($labelWidth, "px")
            : $labelWidth
        : 'auto';
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.medium;
});
/**
 * Styled label.
 */
var Label = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].label(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  ", "\n"], ["\n  ", "\n"])), labelCommonStyles);
var templateObject_1, templateObject_2;


/***/ }),

/***/ "./src/components/SubmitButton/index.ts":
/*!**********************************************!*\
  !*** ./src/components/SubmitButton/index.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SubmitButton: () => (/* binding */ SubmitButton)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/components/SubmitButton/index.ts

/**
 * Styled submit button.
 */
var SubmitButton = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].button(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__makeTemplateObject)(["\n  background-color: ", ";\n  color: ", ";\n  border: none;\n  padding: 10px 20px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-weight: ", ";\n  cursor: pointer;\n  transition:\n    background-color 0.2s ease-in-out,\n    opacity 0.2s ease-in-out;\n  width: auto;\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  box-shadow:\n    0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12); /* Th\u00EAm \u0111\u1ED5 b\u00F3ng */\n\n  &:hover {\n    background-color: ", ";\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n"], ["\n  background-color: ", ";\n  color: ", ";\n  border: none;\n  padding: 10px 20px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-weight: ", ";\n  cursor: pointer;\n  transition:\n    background-color 0.2s ease-in-out,\n    opacity 0.2s ease-in-out;\n  width: auto;\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  box-shadow:\n    0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12); /* Th\u00EAm \u0111\u1ED5 b\u00F3ng */\n\n  &:hover {\n    background-color: ", ";\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.white;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontWeights.semibold;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.medium;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
});
var templateObject_1;


/***/ }),

/***/ "./src/components/index.ts":
/*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorRenderer: () => (/* reexport safe */ _ErrorRenderer__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   ErrorSummary: () => (/* reexport safe */ _ErrorSummary__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _ErrorSummary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ErrorSummary */ "./src/components/ErrorSummary.tsx");
/* harmony import */ var _ErrorRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ErrorRenderer */ "./src/components/ErrorRenderer.tsx");
// Filepath: /src/components/index.ts




/***/ }),

/***/ "./src/features/dynamic-form/DynamicFormProvider.tsx":
/*!***********************************************************!*\
  !*** ./src/features/dynamic-form/DynamicFormProvider.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");

// src/features/dynamic-form/DynamicFormProvider.tsx


var DynamicFormProvider = function (_a) {
    var form = _a.form, children = _a.children;
    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_hook_form__WEBPACK_IMPORTED_MODULE_1__.FormProvider, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, form), children);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DynamicFormProvider);
;
DynamicFormProvider.__docgenInfo = { "description": "", "methods": [], "displayName": "DynamicFormProvider", "props": { "form": { "required": true, "tsType": { "name": "UseFormReturn", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }], "raw": "UseFormReturn<FormValues>" }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactNode" }, "description": "" } } };
DynamicFormProvider.__docgenInfo = { "description": "", "methods": [], "displayName": "DynamicFormProvider", "props": { "form": { "required": true, "tsType": { "name": "UseFormReturn", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "any" }], "raw": "Record<string, any>" }], "raw": "UseFormReturn<FormValues>" }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactNode" }, "description": "" } } };


/***/ }),

/***/ "./src/features/dynamic-form/hooks/index.ts":
/*!**************************************************!*\
  !*** ./src/features/dynamic-form/hooks/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useDynamicForm: () => (/* reexport safe */ _useDynamicForm__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   useFormFields: () => (/* reexport safe */ _useFormFields__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   useRHFOptions: () => (/* reexport safe */ _useRHFOptions__WEBPACK_IMPORTED_MODULE_2__["default"])
/* harmony export */ });
/* harmony import */ var _useDynamicForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useDynamicForm */ "./src/features/dynamic-form/hooks/useDynamicForm.ts");
/* harmony import */ var _useFormFields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useFormFields */ "./src/features/dynamic-form/hooks/useFormFields.ts");
/* harmony import */ var _useRHFOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useRHFOptions */ "./src/features/dynamic-form/hooks/useRHFOptions.ts");
// src/features/dynamic-form/hooks/index.ts





/***/ }),

/***/ "./src/features/dynamic-form/hooks/useDynamicForm.ts":
/*!***********************************************************!*\
  !*** ./src/features/dynamic-form/hooks/useDynamicForm.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./src/features/dynamic-form/utils/formUtils.ts");

// Filepath: /src/features/dynamic-form/hooks/useDynamicForm.ts
// src/features/dynamic-form/hooks/useDynamicForm.ts



/**
 * Custom hook to manage form state and behavior.
 *
 * @param props - The hook props.
 * @returns The `react-hook-form` instance.
 */
var useDynamicForm = function (props) {
    var formOptions = props.formOptions, autoSave = props.autoSave, enableLocalStorage = props.enableLocalStorage, resetOnSubmit = props.resetOnSubmit, focusFirstError = props.focusFirstError, debounceOnChange = props.debounceOnChange, onChange = props.onChange, onFormReady = props.onFormReady, config = props.config;
    // Flatten the config to access default values and types easily
    var flattenedConfig = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.flattenConfig)(config);
    // Create defaultValues object from flattened config
    var defaultValues = Object.keys(flattenedConfig).reduce(function (acc, key) {
        if (flattenedConfig[key].defaultValue !== undefined) {
            acc[key] = flattenedConfig[key].defaultValue;
        }
        return acc;
    }, {});
    var form = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.useForm)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, formOptions), { defaultValues: defaultValues }));
    var formState = form.formState, reset = form.reset, setFocus = form.setFocus, watch = form.watch, control = form.control;
    var isSubmitSuccessful = formState.isSubmitSuccessful, errors = formState.errors;
    // @ts-expect-error
    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), isLocalStorageLoaded = _a[0], setIsLocalStorageLoaded = _a[1];
    // Auto-save
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        var intervalId = null;
        if (autoSave) {
            intervalId = setInterval(function () {
                autoSave.save(watch());
            }, autoSave.interval);
        }
        return function () {
            if (intervalId)
                clearInterval(intervalId);
        };
    }, [autoSave, watch]);
    // LocalStorage - Save data
    // @ts-expect-error
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (enableLocalStorage) {
            var subscription_1 = watch(function (data) {
                return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToLocalStorage)('form-data', data);
            });
            return function () { return subscription_1.unsubscribe(); };
        }
    }, [enableLocalStorage, watch]);
    // LocalStorage - Load data
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (enableLocalStorage) {
            var loadedData = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.loadFromLocalStorage)('form-data');
            if (loadedData) {
                var resetData = {};
                for (var key in flattenedConfig) {
                    var fieldConfig = flattenedConfig[key];
                    if (loadedData[key] !== undefined) {
                        if (fieldConfig.type === 'radio' ||
                            fieldConfig.type === 'checkbox' ||
                            fieldConfig.type === 'switch') {
                            // Convert string to boolean for radio, checkbox, and switch types
                            resetData[key] =
                                loadedData[key] === 'true'
                                    ? true
                                    : loadedData[key] === 'false'
                                        ? false
                                        : loadedData[key];
                            if (resetData[key] === undefined) {
                                resetData[key] = fieldConfig.defaultValue;
                            }
                        }
                        else if (fieldConfig.type === 'number') {
                            // Convert string to number
                            resetData[key] =
                                loadedData[key] !== ''
                                    ? parseFloat(loadedData[key])
                                    : fieldConfig.defaultValue;
                        }
                        else {
                            resetData[key] = loadedData[key];
                        }
                    }
                }
                reset(resetData);
            }
            setIsLocalStorageLoaded(true);
        }
    }, [enableLocalStorage, reset]);
    // Reset on submit
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (resetOnSubmit && isSubmitSuccessful) {
            reset();
        }
    }, [resetOnSubmit, isSubmitSuccessful, reset]);
    // Focus first error
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (focusFirstError) {
            var firstErrorKey = Object.keys(errors)[0];
            if (firstErrorKey) {
                setFocus(firstErrorKey);
            }
        }
    }, [errors, focusFirstError, setFocus]);
    // Debounce on change
    // @ts-expect-error
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (onChange) {
            var debouncedOnChange_1 = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.debounce)(onChange, debounceOnChange || 0);
            var subscription_2 = watch(function (data) { return debouncedOnChange_1(data); });
            return function () { return subscription_2.unsubscribe(); };
        }
    }, [watch, onChange, debounceOnChange]);
    // onFormReady callback
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (onFormReady) {
            onFormReady(form);
        }
    }, [form, onFormReady]);
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, form), { control: control });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useDynamicForm);


/***/ }),

/***/ "./src/features/dynamic-form/hooks/useFormFields.ts":
/*!**********************************************************!*\
  !*** ./src/features/dynamic-form/hooks/useFormFields.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./src/features/dynamic-form/utils/formUtils.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ "./src/features/dynamic-form/utils/conditionalRendering.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ "./src/features/dynamic-form/utils/fieldUtils.ts");
// Filepath: /src/features/dynamic-form/hooks/useFormFields.ts



/**
 * Custom hook to generate form fields from data and config.
 *
 * @param config - The form configuration.
 * @param formState - The `react-hook-form` form state.
 * @param control - The `react-hook-form` control object.
 * @param globalValidationMessages - Optional global validation messages.
 * @returns An object containing the form fields and the fields to render.
 */
function useFormFields(config, formState, control, globalValidationMessages) {
    // @ts-expect-error
    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), update = _a[0], setUpdate = _a[1];
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        setUpdate(function (prev) { return !prev; });
    }, [config]);
    var flattenedConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () { return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.flattenConfig)(config); }, [config]);
    var conditionalFieldsConfig = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        return Object.keys(config)
            .filter(function (fieldId) {
            var _a;
            return config[fieldId].conditional &&
                typeof ((_a = config[fieldId].conditional) === null || _a === void 0 ? void 0 : _a.when) === 'string';
        })
            .map(function (fieldId) {
            var _a, _b;
            return ({
                when: config[fieldId].conditional.when,
                operator: config[fieldId].conditional.operator || 'is',
                value: (_a = config[fieldId].conditional) === null || _a === void 0 ? void 0 : _a.value,
                comparator: (_b = config[fieldId].conditional) === null || _b === void 0 ? void 0 : _b.comparator,
                fields: config[fieldId].conditional.fields || [],
            });
        });
    }, [config]);
    var watchedValues = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.useWatch)({
        control: control,
        name: conditionalFieldsConfig.map(function (condition) { return condition.when; }),
    });
    var fieldsToRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        return Object.keys(config).filter(function (fieldId) {
            return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.shouldRenderField)(fieldId, conditionalFieldsConfig, watchedValues);
        });
    }, [config, conditionalFieldsConfig, watchedValues]);
    var fields = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () { return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getFields)(flattenedConfig, formState, globalValidationMessages); }, [flattenedConfig, formState, globalValidationMessages]);
    return { fields: fields, fieldsToRender: fieldsToRender, conditionalFieldsConfig: conditionalFieldsConfig };
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useFormFields);


/***/ }),

/***/ "./src/features/dynamic-form/hooks/useRHFOptions.ts":
/*!**********************************************************!*\
  !*** ./src/features/dynamic-form/hooks/useRHFOptions.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hookform/resolvers/yup */ "./node_modules/@hookform/resolvers/yup/dist/yup.mjs");
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../validation */ "./src/features/validation/index.ts");

// src/features/dynamic-form/hooks/useRHFOptions.ts



var useRHFOptions = function (config, formOptions, validateOnSubmit, validateOnChange, validateOnBlur, globalValidationMessages) {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        var schema = (0,_validation__WEBPACK_IMPORTED_MODULE_1__.createValidationSchema)(config, globalValidationMessages);
        var resolver = (0,_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_2__.yupResolver)(schema);
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, formOptions), { mode: validateOnSubmit
                ? 'onSubmit'
                : validateOnChange
                    ? 'onChange'
                    : validateOnBlur
                        ? 'onBlur'
                        : 'onSubmit', criteriaMode: 'all', resolver: resolver });
    }, [
        config,
        formOptions,
        validateOnSubmit,
        validateOnChange,
        validateOnBlur,
        globalValidationMessages,
    ]);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useRHFOptions);


/***/ }),

/***/ "./src/features/dynamic-form/index.ts":
/*!********************************************!*\
  !*** ./src/features/dynamic-form/index.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DynamicFormProvider: () => (/* reexport safe */ _DynamicFormProvider__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   FormContainerProps: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FormContainerProps),
/* harmony export */   InputWrapperProps: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.InputWrapperProps),
/* harmony export */   LabelProps: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.LabelProps),
/* harmony export */   debounce: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.debounce),
/* harmony export */   flattenConfig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.flattenConfig),
/* harmony export */   flattenObject: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.flattenObject),
/* harmony export */   getErrorMessage: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.getErrorMessage),
/* harmony export */   getFields: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.getFields),
/* harmony export */   loadFromLocalStorage: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.loadFromLocalStorage),
/* harmony export */   mergeClassNames: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.mergeClassNames),
/* harmony export */   saveToLocalStorage: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.saveToLocalStorage),
/* harmony export */   shouldRenderField: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.shouldRenderField),
/* harmony export */   useDynamicForm: () => (/* reexport safe */ _hooks_useDynamicForm__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   useFormFields: () => (/* reexport safe */ _hooks__WEBPACK_IMPORTED_MODULE_0__.useFormFields),
/* harmony export */   useRHFOptions: () => (/* reexport safe */ _hooks__WEBPACK_IMPORTED_MODULE_0__.useRHFOptions)
/* harmony export */ });
/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks */ "./src/features/dynamic-form/hooks/index.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./src/features/dynamic-form/types.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/features/dynamic-form/utils/index.ts");
/* harmony import */ var _DynamicFormProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DynamicFormProvider */ "./src/features/dynamic-form/DynamicFormProvider.tsx");
/* harmony import */ var _hooks_useDynamicForm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useDynamicForm */ "./src/features/dynamic-form/hooks/useDynamicForm.ts");
// Core logic and hooks for DynamicForm







/***/ }),

/***/ "./src/features/dynamic-form/types.ts":
/*!********************************************!*\
  !*** ./src/features/dynamic-form/types.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormContainerProps: () => (/* reexport safe */ _styles__WEBPACK_IMPORTED_MODULE_0__.FormContainerProps),
/* harmony export */   InputWrapperProps: () => (/* reexport safe */ _styles__WEBPACK_IMPORTED_MODULE_0__.InputWrapperProps),
/* harmony export */   LabelProps: () => (/* reexport safe */ _styles__WEBPACK_IMPORTED_MODULE_0__.LabelProps)
/* harmony export */ });
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../styles */ "./src/styles.ts");

// --- Re-exported types ---

// --- Deprecated ---


/***/ }),

/***/ "./src/features/dynamic-form/utils/conditionalRendering.ts":
/*!*****************************************************************!*\
  !*** ./src/features/dynamic-form/utils/conditionalRendering.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   shouldRenderField: () => (/* binding */ shouldRenderField)
/* harmony export */ });
/**
 * Determines if a field should be rendered based on the conditional logic.
 *
 * @param fieldId - The ID of the field to check.
 * @param conditionalFieldsConfig - The conditional fields configuration.
 * @param watchedValues - The watched values from useWatch.
 * @returns True if the field should be rendered, false otherwise.
 */
var shouldRenderField = function (fieldId, conditionalFieldsConfig, watchedValues) {
    var isConditionalField = conditionalFieldsConfig.some(function (condition) {
        return condition.fields.includes(fieldId);
    });
    if (!isConditionalField) {
        return true;
    }
    return conditionalFieldsConfig.some(function (condition) {
        var conditionIndex = conditionalFieldsConfig.indexOf(condition);
        var watchedValue = watchedValues[conditionIndex];
        var conditionMet = false;
        switch (condition.operator) {
            case 'is':
                conditionMet = watchedValue === condition.value;
                break;
            case 'isNot':
                conditionMet = watchedValue !== condition.value;
                break;
            case 'greaterThan':
                conditionMet = watchedValue > condition.value;
                break;
            case 'lessThan':
                conditionMet = watchedValue < condition.value;
                break;
            case 'greaterThanOrEqual':
                conditionMet = watchedValue >= condition.value;
                break;
            case 'lessThanOrEqual':
                conditionMet = watchedValue <= condition.value;
                break;
            case 'contains':
                conditionMet =
                    typeof watchedValue === 'string' &&
                        typeof condition.value === 'string' &&
                        watchedValue.includes(condition.value);
                break;
            case 'startsWith':
                conditionMet =
                    typeof watchedValue === 'string' &&
                        typeof condition.value === 'string' &&
                        watchedValue.startsWith(condition.value);
                break;
            case 'endsWith':
                conditionMet =
                    typeof watchedValue === 'string' &&
                        typeof condition.value === 'string' &&
                        watchedValue.endsWith(condition.value);
                break;
            case 'custom':
                conditionMet = condition.comparator
                    ? condition.comparator(watchedValue)
                    : false;
                break;
            default:
                console.warn("Unknown operator: ".concat(condition.operator));
                conditionMet = false;
        }
        return condition.fields.includes(fieldId) && conditionMet;
    });
};


/***/ }),

/***/ "./src/features/dynamic-form/utils/fieldUtils.ts":
/*!*******************************************************!*\
  !*** ./src/features/dynamic-form/utils/fieldUtils.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFields: () => (/* binding */ getFields)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _inputs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../inputs/utils */ "./src/features/inputs/utils.ts");
/* harmony import */ var _validationUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validationUtils */ "./src/features/dynamic-form/utils/validationUtils.ts");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");




/**
 * Generates the form fields array based on the flattened config and form state.
 *
 * @param flattenedConfig - The flattened form configuration.
 * @param formState - The `react-hook-form` form state.
 * @param globalValidationMessages - Optional global validation messages.
 * @returns The form fields array.
 */
var getFields = function (flattenedConfig, formState, globalValidationMessages) {
    return Object.entries(flattenedConfig).map(function (_a) {
        var key = _a[0], fieldConfig = _a[1];
        // Retrieve the default value from fieldConfig
        var defaultValue = fieldConfig.defaultValue;
        var inputType = fieldConfig.type || (0,_inputs_utils__WEBPACK_IMPORTED_MODULE_0__.getInputTypeFromValue)(defaultValue);
        var fieldError = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_1__.get)(formState.errors, key);
        var errorMessage = (0,_validationUtils__WEBPACK_IMPORTED_MODULE_2__.getErrorMessage)(fieldConfig, fieldError, {}, globalValidationMessages);
        return {
            label: fieldConfig.label,
            id: key,
            type: inputType,
            error: errorMessage
                ? (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, fieldError), { message: errorMessage, type: (fieldError === null || fieldError === void 0 ? void 0 : fieldError.type) || '' }) : fieldError,
        };
    });
};


/***/ }),

/***/ "./src/features/dynamic-form/utils/formUtils.ts":
/*!******************************************************!*\
  !*** ./src/features/dynamic-form/utils/formUtils.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounce: () => (/* binding */ debounce),
/* harmony export */   flattenConfig: () => (/* binding */ flattenConfig),
/* harmony export */   flattenObject: () => (/* binding */ flattenObject),
/* harmony export */   loadFromLocalStorage: () => (/* binding */ loadFromLocalStorage),
/* harmony export */   mergeClassNames: () => (/* binding */ mergeClassNames),
/* harmony export */   saveToLocalStorage: () => (/* binding */ saveToLocalStorage)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");

/**
 * Flattens a nested object into a single-level object.
 *
 * @param obj - The object to flatten.
 * @param parentKey - The parent key (used for recursion).
 * @param result - The resulting flattened object.
 * @returns The flattened object.
 */
var flattenObject = function (obj, parentKey, result) {
    if (parentKey === void 0) { parentKey = ''; }
    if (result === void 0) { result = {}; }
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var newKey = parentKey ? "".concat(parentKey, ".").concat(key) : key;
            if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {
                flattenObject(obj[key], newKey, result);
            }
            else {
                result[newKey] = obj[key];
            }
        }
    }
    return result;
};
/**
 * Flattens a nested config object into a single-level object.
 *
 * @param config - The config object to flatten.
 * @param parentKey - The parent key (used for recursion).
 * @param result - The resulting flattened config object.
 * @returns The flattened config object.
 */
var flattenConfig = function (config, parentKey, result) {
    if (parentKey === void 0) { parentKey = ''; }
    if (result === void 0) { result = {}; }
    for (var key in config) {
        if (Object.prototype.hasOwnProperty.call(config, key)) {
            var newKey = parentKey ? "".concat(parentKey, ".").concat(key) : key;
            var fieldConfig = config[key];
            if (fieldConfig.fields) {
                flattenConfig(fieldConfig.fields, newKey, result);
            }
            else {
                result[newKey] = fieldConfig;
            }
        }
    }
    return result;
};
/**
 * Debounces a function.
 *
 * @param func - The function to debounce.
 * @param wait - The debounce time in milliseconds.
 * @returns The debounced function.
 */
var debounce = function (func, wait) {
    var timeout;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var later = function () {
            timeout = null;
            func.apply(void 0, args);
        };
        if (timeout)
            clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
};
/**
 * Saves data to localStorage.
 *
 * @param key - The key to store the data under.
 * @param data - The data to store.
 */
var saveToLocalStorage = function (key, data) {
    localStorage.setItem(key, JSON.stringify(data));
};
/**
 * Loads data from localStorage.
 *
 * @param key - The key to load the data from.
 * @returns The loaded data, or null if no data is found.
 */
var loadFromLocalStorage = function (key) {
    var data = localStorage.getItem(key);
    return data ? JSON.parse(data) : null;
};
/**
 * Merges multiple classNameConfig objects into a single object.
 *
 * @param defaultClassNames - The default classNameConfig object.
 * @param formClassNames - The form-level classNameConfig object.
 * @param fieldClassNames - The field-level classNameConfig object.
 * @returns The merged classNameConfig object.
 */
var mergeClassNames = function (defaultClassNames, formClassNames, fieldClassNames) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultClassNames), formClassNames), fieldClassNames);
};


/***/ }),

/***/ "./src/features/dynamic-form/utils/index.ts":
/*!**************************************************!*\
  !*** ./src/features/dynamic-form/utils/index.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounce: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.debounce),
/* harmony export */   flattenConfig: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.flattenConfig),
/* harmony export */   flattenObject: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.flattenObject),
/* harmony export */   getErrorMessage: () => (/* reexport safe */ _validationUtils__WEBPACK_IMPORTED_MODULE_1__.getErrorMessage),
/* harmony export */   getFields: () => (/* reexport safe */ _fieldUtils__WEBPACK_IMPORTED_MODULE_2__.getFields),
/* harmony export */   loadFromLocalStorage: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.loadFromLocalStorage),
/* harmony export */   mergeClassNames: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.mergeClassNames),
/* harmony export */   saveToLocalStorage: () => (/* reexport safe */ _formUtils__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage),
/* harmony export */   shouldRenderField: () => (/* reexport safe */ _conditionalRendering__WEBPACK_IMPORTED_MODULE_3__.shouldRenderField)
/* harmony export */ });
/* harmony import */ var _formUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formUtils */ "./src/features/dynamic-form/utils/formUtils.ts");
/* harmony import */ var _validationUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validationUtils */ "./src/features/dynamic-form/utils/validationUtils.ts");
/* harmony import */ var _fieldUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fieldUtils */ "./src/features/dynamic-form/utils/fieldUtils.ts");
/* harmony import */ var _conditionalRendering__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conditionalRendering */ "./src/features/dynamic-form/utils/conditionalRendering.ts");
// src/features/dynamic-form/utils/index.ts






/***/ }),

/***/ "./src/features/dynamic-form/utils/validationUtils.ts":
/*!************************************************************!*\
  !*** ./src/features/dynamic-form/utils/validationUtils.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");

/**
 * Retrieves the error message for a field based on its validation messages and error type.
 *
 * @param fieldConfig - The field configuration.
 * @param fieldError - The field error object.
 * @param values - form values
 * @param globalValidationMessages - Optional global validation messages.
 * @returns The error message string or undefined if no error message is found.
 */
var getErrorMessage = function (fieldConfig, fieldError, values, globalValidationMessages) {
    if (!fieldError) {
        return undefined;
    }
    var type = fieldError.type;
    var fieldValidationMessages = fieldConfig.validationMessages;
    // Merge global and field-level validation messages
    var mergedValidationMessages = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, globalValidationMessages), fieldValidationMessages);
    if (mergedValidationMessages && mergedValidationMessages[type]) {
        var template = mergedValidationMessages[type];
        return typeof template === 'function'
            ? template((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, values), { error: fieldError, config: fieldConfig }))
            : template;
    }
    return fieldError.message;
};


/***/ }),

/***/ "./src/features/form-renderer/FormRenderer.tsx":
/*!*****************************************************!*\
  !*** ./src/features/form-renderer/FormRenderer.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components */ "./src/features/form-renderer/components/index.ts");
// Filepath: /src/features/form-renderer/FormRenderer.tsx
// @ts-nocheck



var FormRenderer = function (_a) {
    var className = _a.className, _b = _a.formClassNameConfig, formClassNameConfig = _b === void 0 ? {} : _b, style = _a.style, _c = _a.layout, layout = _c === void 0 ? 'grid' : _c, layoutConfig = _a.layoutConfig, horizontalLabel = _a.horizontalLabel, theme = _a.theme, header = _a.header, fieldsToRender = _a.fieldsToRender, fields = _a.fields, config = _a.config, footer = _a.footer, _d = _a.showSubmitButton, showSubmitButton = _d === void 0 ? true : _d, _e = _a.showErrorSummary, showErrorSummary = _e === void 0 ? false : _e, labelWidth = _a.labelWidth, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, customInputs = _a.customInputs, onSubmit = _a.onSubmit, renderSubmitButton = _a.renderSubmitButton, renderFormContent = _a.renderFormContent, renderFormFooter = _a.renderFormFooter, renderErrorSummary = _a.renderErrorSummary;
    var form = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.useFormContext)();
    var formState = form.formState, handleSubmit = form.handleSubmit;
    var content = renderFormContent ? (renderFormContent({
        fieldsToRender: fieldsToRender,
        fields: fields,
        config: config,
        formClassNameConfig: formClassNameConfig,
        horizontalLabel: horizontalLabel,
        labelWidth: labelWidth,
        disableAutocomplete: disableAutocomplete,
        showInlineError: showInlineError,
        conditionalFieldsConfig: [],
        renderInput: function (field, fieldConfig, commonInputProps) { return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null); },
    })) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.FormContent, { fieldsToRender: fieldsToRender, fields: fields, config: config, formClassNameConfig: formClassNameConfig, horizontalLabel: horizontalLabel, labelWidth: labelWidth, disableAutocomplete: disableAutocomplete, showInlineError: showInlineError, conditionalFieldsConfig: [], customInputs: customInputs }));
    var footerContent = renderFormFooter ? (renderFormFooter({
        footer: footer,
        showSubmitButton: showSubmitButton,
        renderSubmitButton: renderSubmitButton,
        isSubmitting: formState.isSubmitting,
        showErrorSummary: showErrorSummary,
        errors: formState.errors,
        formClassNameConfig: formClassNameConfig,
    })) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.FormFooter, { footer: footer, formClassNameConfig: formClassNameConfig, showSubmitButton: showSubmitButton, renderSubmitButton: renderSubmitButton, isSubmitting: formState.isSubmitting, showErrorSummary: showErrorSummary, errors: formState.errors }));
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        header,
        content,
        footerContent));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormRenderer);
;
FormRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "FormRenderer", "props": { "fieldsToRender": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "string" }], "raw": "string[]" }, "description": "" }, "fields": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "FormField" }], "raw": "FormField[]" }, "description": "List of form fields." }, "conditionalFieldsConfig": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "Condition" }], "raw": "Condition[]" }, "description": "Configuration for conditional fields." }, "renderFormContent": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  props: Omit<FormContentProps, 'renderInput'> & {\n    renderInput: RenderInputProps;\n  }\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "intersection", "raw": "Omit<FormContentProps, 'renderInput'> & {\n  renderInput: RenderInputProps;\n}", "elements": [{ "name": "Omit", "elements": [{ "name": "FormContentProps" }, { "name": "literal", "value": "'renderInput'" }], "raw": "Omit<FormContentProps, 'renderInput'>" }, { "name": "signature", "type": "object", "raw": "{\n  renderInput: RenderInputProps;\n}", "signature": { "properties": [{ "key": "renderInput", "value": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }] } }] }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom renderer for the form content." }, "renderFormFooter": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}", "signature": { "properties": [{ "key": "footer", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": false } }, { "key": "showSubmitButton", "value": { "name": "boolean", "required": true } }, { "key": "renderSubmitButton", "value": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }, { "key": "isSubmitting", "value": { "name": "boolean", "required": true } }, { "key": "showErrorSummary", "value": { "name": "boolean", "required": true } }, { "key": "errors", "value": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>", "required": true } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom renderer for the form footer." }, "formClassNameConfig": { "defaultValue": { "value": "{}", "computed": false }, "required": false }, "layout": { "defaultValue": { "value": "'grid'", "computed": false }, "required": false }, "showSubmitButton": { "defaultValue": { "value": "true", "computed": false }, "required": false }, "showErrorSummary": { "defaultValue": { "value": "false", "computed": false }, "required": false } }, "composes": ["Omit"] };
FormRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "FormRenderer", "props": { "fieldsToRender": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "string" }], "raw": "string[]" }, "description": "" }, "fields": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "FormField" }], "raw": "FormField[]" }, "description": "List of form fields." }, "conditionalFieldsConfig": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "Condition" }], "raw": "Condition[]" }, "description": "Configuration for conditional fields." }, "renderFormContent": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  props: Omit<FormContentProps, 'renderInput'> & {\n    renderInput: RenderInputProps;\n  }\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "intersection", "raw": "Omit<FormContentProps, 'renderInput'> & {\n  renderInput: RenderInputProps;\n}", "elements": [{ "name": "Omit", "elements": [{ "name": "FormContentProps" }, { "name": "literal", "value": "'renderInput'" }], "raw": "Omit<FormContentProps, 'renderInput'>" }, { "name": "signature", "type": "object", "raw": "{\n  renderInput: RenderInputProps;\n}", "signature": { "properties": [{ "key": "renderInput", "value": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }] } }] }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom renderer for the form content." }, "renderFormFooter": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(props: {\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "object", "raw": "{\n  footer?: React.ReactNode;\n  showSubmitButton: boolean;\n  renderSubmitButton: RenderSubmitButtonProps;\n  isSubmitting: boolean;\n  showErrorSummary: boolean;\n  errors: FieldErrors;\n  formClassNameConfig?: FormClassNameConfig;\n}", "signature": { "properties": [{ "key": "footer", "value": { "name": "ReactReactNode", "raw": "React.ReactNode", "required": false } }, { "key": "showSubmitButton", "value": { "name": "boolean", "required": true } }, { "key": "renderSubmitButton", "value": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } }, "required": true } }, { "key": "isSubmitting", "value": { "name": "boolean", "required": true } }, { "key": "showErrorSummary", "value": { "name": "boolean", "required": true } }, { "key": "errors", "value": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>", "required": true } }, { "key": "formClassNameConfig", "value": { "name": "FormClassNameConfig", "required": false } }] } }, "name": "props" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom renderer for the form footer." }, "formClassNameConfig": { "defaultValue": { "value": "{}", "computed": false }, "required": false }, "layout": { "defaultValue": { "value": "'grid'", "computed": false }, "required": false }, "showSubmitButton": { "defaultValue": { "value": "true", "computed": false }, "required": false }, "showErrorSummary": { "defaultValue": { "value": "false", "computed": false }, "required": false } }, "composes": ["Omit"] };


/***/ }),

/***/ "./src/features/form-renderer/components/FormContent.tsx":
/*!***************************************************************!*\
  !*** ./src/features/form-renderer/components/FormContent.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _inputs_components_InputRenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../inputs/components/InputRenderer */ "./src/features/inputs/components/InputRenderer.tsx");
// Filepath: /src/features/form-renderer/components/FormContent.tsx




var FormContent = function (_a) {
    var fieldsToRender = _a.fieldsToRender, fields = _a.fields, config = _a.config, formClassNameConfig = _a.formClassNameConfig, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, renderInput = _a.renderInput, 
    // @ts-expect-error
    conditionalFieldsConfig = _a.conditionalFieldsConfig, 
    // @ts-expect-error
    customInputs = _a.customInputs;
    var _b = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)(), register = _b.register, unregister = _b.unregister, errors = _b.formState.errors;
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        fields.forEach(function (field) {
            var fieldConfig = config[field.id] || {};
            if (fieldsToRender.includes(field.id)) {
                register(field.id, fieldConfig.validation);
            }
            else {
                unregister(field.id);
            }
        });
    }, [register, unregister, config]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, fields
        .filter(function (field) { return fieldsToRender.includes(field.id); })
        .map(function (field) {
        // Access the nested error object correctly
        var fieldError = errors[field.id];
        var fieldConfig = config[field.id] || {};
        var fieldClassNameConfig = fieldConfig.classNameConfig || {};
        var formClassName = formClassNameConfig || {};
        var commonInputProps = {
            id: field.id,
            fieldConfig: fieldConfig,
            formClassNameConfig: formClassNameConfig,
            showInlineError: showInlineError,
            horizontalLabel: horizontalLabel,
            labelWidth: labelWidth,
            error: fieldError,
            disableAutocomplete: disableAutocomplete,
        };
        var inputElement = renderInput ? (renderInput(field, fieldConfig, commonInputProps)) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_inputs_components_InputRenderer__WEBPACK_IMPORTED_MODULE_2__["default"], { field: field, config: config, 
            // @ts-expect-error
            formClassNameConfig: formClassNameConfig, disableAutocomplete: disableAutocomplete, showInlineError: showInlineError, horizontalLabel: horizontalLabel, labelWidth: labelWidth, customInputs: customInputs }));
        return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { key: field.id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: fieldClassNameConfig.inputWrapper || formClassName.inputWrapper }, inputElement));
    })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormContent);
;
FormContent.__docgenInfo = { "description": "", "methods": [], "displayName": "FormContent", "props": { "fields": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "FormField" }], "raw": "FormField[]" }, "description": "List of form fields." }, "fieldsToRender": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "string" }], "raw": "string[]" }, "description": "List of field IDs to render." }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "The form configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use horizontal labels." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete." }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "conditionalFieldsConfig": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "Condition" }], "raw": "Condition[]" }, "description": "Configuration for conditional fields." }, "renderInput": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom input renderer." }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<any>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<any>", "elements": [{ "name": "any" }], "required": true } }] } }, "description": "form values" } } };
FormContent.__docgenInfo = { "description": "", "methods": [], "displayName": "FormContent", "props": { "fields": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "FormField" }], "raw": "FormField[]" }, "description": "List of form fields." }, "fieldsToRender": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "string" }], "raw": "string[]" }, "description": "List of field IDs to render." }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "The form configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use horizontal labels." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete." }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "conditionalFieldsConfig": { "required": true, "tsType": { "name": "Array", "elements": [{ "name": "Condition" }], "raw": "Condition[]" }, "description": "Configuration for conditional fields." }, "renderInput": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  field: FormField,\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FormField" }, "name": "field" }, { "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom input renderer." }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<any>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<any>", "elements": [{ "name": "any" }], "required": true } }] } }, "description": "form values" } } };


/***/ }),

/***/ "./src/features/form-renderer/components/FormFooter.tsx":
/*!**************************************************************!*\
  !*** ./src/features/form-renderer/components/FormFooter.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../components */ "./src/components/index.ts");
// Filepath: /src/features/form-renderer/components/FormFooter.tsx


var FormFooter = function (_a) {
    var footer = _a.footer, showErrorSummary = _a.showErrorSummary, errors = _a.errors, formClassNameConfig = _a.formClassNameConfig;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        footer,
        showErrorSummary && Object.keys(errors).length > 0 && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.ErrorSummary, { errors: errors, formClassNameConfig: formClassNameConfig }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormFooter);
;
FormFooter.__docgenInfo = { "description": "", "methods": [], "displayName": "FormFooter", "props": { "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional footer element." }, "showSubmitButton": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether to show the submit button." }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom submit button renderer." }, "isSubmitting": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether the form is currently submitting." }, "showErrorSummary": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether to show an error summary." }, "errors": { "required": true, "tsType": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "description": "Field errors." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements." } } };
FormFooter.__docgenInfo = { "description": "", "methods": [], "displayName": "FormFooter", "props": { "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "Optional footer element." }, "showSubmitButton": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether to show the submit button." }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: (e?: React.BaseSyntheticEvent) => Promise<void>,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "(e?: React.BaseSyntheticEvent) => Promise<void>", "signature": { "arguments": [{ "type": { "name": "ReactBaseSyntheticEvent", "raw": "React.BaseSyntheticEvent" }, "name": "e" }], "return": { "name": "Promise", "elements": [{ "name": "void" }], "raw": "Promise<void>" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "Optional custom submit button renderer." }, "isSubmitting": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether the form is currently submitting." }, "showErrorSummary": { "required": true, "tsType": { "name": "boolean" }, "description": "Whether to show an error summary." }, "errors": { "required": true, "tsType": { "name": "RHFFieldErrors", "elements": [{ "name": "FieldValues" }], "raw": "RHFFieldErrors<FieldValues>" }, "description": "Field errors." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements." } } };


/***/ }),

/***/ "./src/features/form-renderer/components/FormLayout.tsx":
/*!**************************************************************!*\
  !*** ./src/features/form-renderer/components/FormLayout.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../theme */ "./src/theme/index.ts");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");

// Filepath: /src/features/form-renderer/components/FormLayout.tsx




var FormLayout = function (_a) {
    var onSubmit = _a.onSubmit, children = _a.children, className = _a.className, formClassNameConfig = _a.formClassNameConfig, style = _a.style, layout = _a.layout, layoutConfig = _a.layoutConfig, horizontalLabel = _a.horizontalLabel, theme = _a.theme;
    var mergedTheme = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        return theme ? (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, _theme__WEBPACK_IMPORTED_MODULE_1__.defaultTheme), theme) : _theme__WEBPACK_IMPORTED_MODULE_1__.defaultTheme;
    }, [theme]);
    var handleSubmit = function (event) {
        event.preventDefault();
        onSubmit(event);
    };
    var LayoutComponent = layout === 'grid' ? _styles__WEBPACK_IMPORTED_MODULE_2__.GridFormContainer : _styles__WEBPACK_IMPORTED_MODULE_2__.FormContainer;
    var layoutComponentProps = {
        onSubmit: handleSubmit,
        className: "".concat(className || '', " ").concat((formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.formContainer) || ''),
        style: style,
        $layout: layout,
        $layoutConfig: layoutConfig,
        $horizontalLabel: horizontalLabel,
        $minWidth: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.minWidth,
        $gap: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.gap,
        $breakpoints: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.breakpoints,
        children: children,
    };
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(styled_components__WEBPACK_IMPORTED_MODULE_4__.ThemeProvider, { theme: mergedTheme },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LayoutComponent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, layoutComponentProps))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormLayout);
;
FormLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FormLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layout": { "required": true, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };
FormLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FormLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layout": { "required": true, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };


/***/ }),

/***/ "./src/features/form-renderer/components/index.ts":
/*!********************************************************!*\
  !*** ./src/features/form-renderer/components/index.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormContent: () => (/* reexport safe */ _FormContent__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   FormFooter: () => (/* reexport safe */ _FormFooter__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   FormLayout: () => (/* reexport safe */ _FormLayout__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _FormLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormLayout */ "./src/features/form-renderer/components/FormLayout.tsx");
/* harmony import */ var _FormContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormContent */ "./src/features/form-renderer/components/FormContent.tsx");
/* harmony import */ var _FormFooter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FormFooter */ "./src/features/form-renderer/components/FormFooter.tsx");
// src/features/form-renderer/components/index.ts





/***/ }),

/***/ "./src/features/form-renderer/index.ts":
/*!*********************************************!*\
  !*** ./src/features/form-renderer/index.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormContent),
/* harmony export */   FormFooter: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormFooter),
/* harmony export */   FormLayout: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormLayout),
/* harmony export */   FormRenderer: () => (/* reexport safe */ _FormRenderer__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _FormRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FormRenderer */ "./src/features/form-renderer/FormRenderer.tsx");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components */ "./src/features/form-renderer/components/index.ts");
// src/features/form-renderer/index.ts





/***/ }),

/***/ "./src/features/inputs/components/CheckboxInput.tsx":
/*!**********************************************************!*\
  !*** ./src/features/inputs/components/CheckboxInput.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
// Filepath: /src/features/inputs/components/CheckboxInput.tsx





var CheckboxInputStyled = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].input(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  appearance: none;\n  width: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  border: 1px solid ", ";\n  border-radius: 4px; /* Bo tr\u00F2n */\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  position: relative;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:checked {\n    background-color: ", ";\n    border-color: ", ";\n  }\n\n  &:checked::after {\n    content: '\u2714';\n    display: block;\n    text-align: center;\n    font-size: 14px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc icon */\n    line-height: 18px; /* C\u0103n gi\u1EEFa icon */\n    color: ", ";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"], ["\n  appearance: none;\n  width: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  border: 1px solid ", ";\n  border-radius: 4px; /* Bo tr\u00F2n */\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  position: relative;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:checked {\n    background-color: ", ";\n    border-color: ", ";\n  }\n\n  &:checked::after {\n    content: '\u2714';\n    display: block;\n    text-align: center;\n    font-size: 14px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc icon */\n    line-height: 18px; /* C\u0103n gi\u1EEFa icon */\n    color: ", ";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.white;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
});
var CheckboxInput = function (_a) {
    var id = _a.id, fieldConfig = _a.fieldConfig, _b = _a.formClassNameConfig, formClassNameConfig = _b === void 0 ? {} : _b, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CheckboxInputStyled, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, field, { className: formClassNameConfig.checkboxInput, type: "checkbox", id: id, checked: !!field.value })),
            label)),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CheckboxInput);
;
CheckboxInput.__docgenInfo = { "description": "", "methods": [], "displayName": "CheckboxInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
CheckboxInput.__docgenInfo = { "description": "", "methods": [], "displayName": "CheckboxInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1;


/***/ }),

/***/ "./src/features/inputs/components/ComboBox.tsx":
/*!*****************************************************!*\
  !*** ./src/features/inputs/components/ComboBox.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
// Filepath: /src/features/inputs/components/ComboBox.tsx





var ComboBoxContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: relative;\n  width: 100%;\n"], ["\n  position: relative;\n  width: 100%;\n"])));
var DropdownList = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].ul(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid ", ";\n  border-radius: 8px; /* Bo tr\u00F2n */\n  background-color: white;\n  z-index: 10;\n  list-style: none;\n  padding: 0;\n  margin: 4px 0 0 0;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow:\n    0px 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0px 2px 4px -1px rgba(0, 0, 0, 0.06);\n"], ["\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid ", ";\n  border-radius: 8px; /* Bo tr\u00F2n */\n  background-color: white;\n  z-index: 10;\n  list-style: none;\n  padding: 0;\n  margin: 4px 0 0 0;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow:\n    0px 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0px 2px 4px -1px rgba(0, 0, 0, 0.06);\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
});
var DropdownItem = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].li(templateObject_3 || (templateObject_3 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  cursor: pointer;\n  &:hover {\n    background-color: ", ";\n  }\n  &.selected {\n    background-color: ", ";\n    color: white;\n  }\n"], ["\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  cursor: pointer;\n  &:hover {\n    background-color: ", ";\n  }\n  &.selected {\n    background-color: ", ";\n    color: white;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors['light-500'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
});
var ComboBox = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var label = fieldConfig.label, options = fieldConfig.options;
    var _d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), isOpen = _d[0], setIsOpen = _d[1];
    var _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''), inputValue = _e[0], setInputValue = _e[1];
    var _f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1), highlightedIndex = _f[0], setHighlightedIndex = _f[1];
    var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
    }).field;
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        setInputValue(field.value || '');
    }, [field.value]);
    var filteredOptions = options
        ? options.filter(function (option) {
            return option.label.toLowerCase().includes(inputValue.toLowerCase());
        })
        : [];
    var handleInputChange = function (event) {
        var val = event.target.value;
        setInputValue(val);
        field.onChange(event); // Update form state
        if (!isOpen && val) {
            setIsOpen(true);
        }
        else if (isOpen && !val) {
            setIsOpen(false);
        }
    };
    var handleOptionClick = function (value) {
        setInputValue(value);
        field.onChange(value); // Update form state
        setIsOpen(false);
    };
    var toggleDropdown = function () {
        setIsOpen(!isOpen);
    };
    var closeDropdown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
        setIsOpen(false);
    }, []);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        var handleClickOutside = function (event) {
            if (containerRef.current &&
                !containerRef.current.contains(event.target)) {
                closeDropdown();
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        return function () { return document.removeEventListener('mousedown', handleClickOutside); };
    }, [closeDropdown]);
    var handleKeyDown = function (event) {
        if (event.key === 'ArrowDown') {
            event.preventDefault();
            setHighlightedIndex(function (prevIndex) {
                return filteredOptions.length > 0
                    ? Math.min(prevIndex + 1, filteredOptions.length - 1)
                    : -1;
            });
        }
        else if (event.key === 'ArrowUp') {
            event.preventDefault();
            setHighlightedIndex(function (prevIndex) {
                return prevIndex > 0 ? prevIndex - 1 : filteredOptions.length - 1;
            });
        }
        else if (event.key === 'Enter') {
            event.preventDefault();
            if (highlightedIndex >= 0) {
                var selectedValue = filteredOptions[highlightedIndex].value;
                setInputValue(selectedValue);
                field.onChange(selectedValue); // Update form state
                setIsOpen(false);
            }
        }
        else if (event.key === 'Escape') {
            event.preventDefault();
            setIsOpen(false);
        }
    };
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (isOpen && highlightedIndex >= 0 && containerRef.current) {
            var item = containerRef.current.querySelector("li:nth-child(".concat(highlightedIndex + 1, ")"));
            if (item) {
                item.scrollIntoView({ block: 'nearest', inline: 'start' });
            }
        }
    }, [isOpen, highlightedIndex]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: 'red' } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ComboBoxContainer, { ref: containerRef, className: formClassNameConfig.comboBoxContainer },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, field, { className: formClassNameConfig.comboBox, id: id, value: inputValue, onChange: handleInputChange, onClick: toggleDropdown, onKeyDown: handleKeyDown, autoComplete: "off" })),
            isOpen && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownList, { className: formClassNameConfig.comboBoxDropdownList }, filteredOptions.length > 0 ? (filteredOptions.map(function (option, index) { return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownItem, { key: option.value, onClick: function () { return handleOptionClick(option.value); }, className: "".concat(index === highlightedIndex ? 'selected' : '', " ").concat(formClassNameConfig.comboBoxDropdownItem) }, option.label)); })) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownItem, { className: formClassNameConfig.comboBoxDropdownItem }, "No results found"))))),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ComboBox);
;
ComboBox.__docgenInfo = { "description": "", "methods": [], "displayName": "ComboBox", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "" }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "" } } };
ComboBox.__docgenInfo = { "description": "", "methods": [], "displayName": "ComboBox", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "" }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "" } } };
var templateObject_1, templateObject_2, templateObject_3;


/***/ }),

/***/ "./src/features/inputs/components/DateInput.tsx":
/*!******************************************************!*\
  !*** ./src/features/inputs/components/DateInput.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/DateInput.tsx





var DateInput = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.date, type: "date", id: id })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateInput);
;
DateInput.__docgenInfo = { "description": "", "methods": [], "displayName": "DateInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
DateInput.__docgenInfo = { "description": "", "methods": [], "displayName": "DateInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };


/***/ }),

/***/ "./src/features/inputs/components/DateTimePicker.tsx":
/*!***********************************************************!*\
  !*** ./src/features/inputs/components/DateTimePicker.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/DateTimePicker.tsx





var DateTimePicker = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.dateTime, type: "datetime-local", id: id })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DateTimePicker);
;
DateTimePicker.__docgenInfo = { "description": "", "methods": [], "displayName": "DateTimePicker", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
DateTimePicker.__docgenInfo = { "description": "", "methods": [], "displayName": "DateTimePicker", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };


/***/ }),

/***/ "./src/features/inputs/components/InputRenderer.tsx":
/*!**********************************************************!*\
  !*** ./src/features/inputs/components/InputRenderer.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _registry_InputRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../registry/InputRegistry */ "./src/features/inputs/registry/InputRegistry.ts");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _dynamic_form_utils_formUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../dynamic-form/utils/formUtils */ "./src/features/dynamic-form/utils/formUtils.ts");

// src/features/inputs/components/InputRenderer.tsx



 // Import hàm mergeClassNames
var InputRenderer = function (_a) {
    var field = _a.field, config = _a.config, formClassNameConfig = _a.formClassNameConfig, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, renderErrorMessage = _a.renderErrorMessage, customInputs = _a.customInputs;
    var id = field.id, type = field.type, error = field.error;
    var fieldConfig = config[id] || {};
    // Prioritize custom input components
    var CustomInputComponent = customInputs === null || customInputs === void 0 ? void 0 : customInputs[type];
    var RegisteredInputComponent = (0,_registry_InputRegistry__WEBPACK_IMPORTED_MODULE_1__.getInputComponent)(type);
    var InputComponent = CustomInputComponent || RegisteredInputComponent;
    // Merge class names
    var mergedFormClassNameConfig = (0,_dynamic_form_utils_formUtils__WEBPACK_IMPORTED_MODULE_3__.mergeClassNames)({}, // Default empty object
    formClassNameConfig, fieldConfig.classNameConfig);
    var commonInputProps = {
        id: id,
        fieldConfig: fieldConfig,
        formClassNameConfig: mergedFormClassNameConfig, // Truyền mergedFormClassNameConfig thay vì formClassNameConfig
        showInlineError: showInlineError,
        horizontalLabel: horizontalLabel,
        labelWidth: labelWidth,
        error: error,
        disableAutocomplete: disableAutocomplete,
    };
    // Render error message using renderErrorMessage prop or default
    var errorMessageElement = showInlineError && error && renderErrorMessage
        ? renderErrorMessage(error, mergedFormClassNameConfig) // Sử dụng mergedFormClassNameConfig
        : showInlineError && error
            ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_2__.ErrorMessage, {
                className: mergedFormClassNameConfig.errorMessage, // Sử dụng mergedFormClassNameConfig
                children: error.message,
            })
            : null;
    if (!InputComponent) {
        console.warn("No input component found for type: ".concat(type));
        return null;
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(InputComponent, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, commonInputProps)),
        errorMessageElement));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputRenderer);
;
InputRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "InputRenderer", "props": { "field": { "required": true, "tsType": { "name": "FormField" }, "description": "" }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "" }, "formClassNameConfig": { "required": true, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "renderLabel": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "renderErrorMessage": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  error: FieldError | undefined,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "union", "raw": "FieldError | undefined", "elements": [{ "name": "FieldError" }, { "name": "undefined" }] }, "name": "error" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "" } } };
InputRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "InputRenderer", "props": { "field": { "required": true, "tsType": { "name": "FormField" }, "description": "" }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "" }, "formClassNameConfig": { "required": true, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "renderLabel": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "renderErrorMessage": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  error: FieldError | undefined,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "union", "raw": "FieldError | undefined", "elements": [{ "name": "FieldError" }, { "name": "undefined" }] }, "name": "error" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "" } } };


/***/ }),

/***/ "./src/features/inputs/components/NumberInput.tsx":
/*!********************************************************!*\
  !*** ./src/features/inputs/components/NumberInput.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/NumberInput.tsx






var NumberInputContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  input {\n    text-align: center;\n    padding-right: 0;\n    width: 65px; /* Gi\u1EA3m chi\u1EC1u r\u1ED9ng */\n  }\n"], ["\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  input {\n    text-align: center;\n    padding-right: 0;\n    width: 65px; /* Gi\u1EA3m chi\u1EC1u r\u1ED9ng */\n  }\n"])));
var SpinButton = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].button(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  background: none;\n  border: 1px solid ", ";\n  padding: 0;\n  height: 32px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  width: 32px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  font-size: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  line-height: 0;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    background-color: ", ";\n  }\n  &:disabled {\n    cursor: default;\n    background-color: #efefef;\n  }\n  &:first-of-type {\n    border-radius: 8px 0 0 8px; /* Bo tr\u00F2n */\n    border-right: none;\n  }\n  &:last-of-type {\n    border-radius: 0 8px 8px 0; /* Bo tr\u00F2n */\n    border-left: none;\n  }\n"], ["\n  background: none;\n  border: 1px solid ", ";\n  padding: 0;\n  height: 32px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  width: 32px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  font-size: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  line-height: 0;\n  color: ", ";\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    background-color: ", ";\n  }\n  &:disabled {\n    cursor: default;\n    background-color: #efefef;\n  }\n  &:first-of-type {\n    border-radius: 8px 0 0 8px; /* Bo tr\u00F2n */\n    border-right: none;\n  }\n  &:last-of-type {\n    border-radius: 0 8px 8px 0; /* Bo tr\u00F2n */\n    border-left: none;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.text;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['light-500'];
});
var NumberInput = function (_a) {
    var _b, _c, _d;
    var id = _a.id, fieldConfig = _a.fieldConfig, _e = _a.formClassNameConfig, formClassNameConfig = _e === void 0 ? {} : _e, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    var _f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(+field.value || 0), internalValue = _f[0], setInternalValue = _f[1];
    var clampValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (value) {
        var _a = fieldConfig.validation || {}, min = _a.min, max = _a.max;
        var clampedValue = value;
        if (min !== undefined && typeof min === 'object' && value < +min.value) {
            clampedValue = +min.value;
        }
        if (max !== undefined && typeof max === 'object' && value > +max.value) {
            clampedValue = +max.value;
        }
        return clampedValue;
    }, [fieldConfig.validation]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        setInternalValue(+field.value || 0);
    }, [field.value]);
    var handleIncrement = function () {
        var newValue = clampValue(internalValue + 1);
        setInternalValue(newValue);
        field.onChange(newValue);
    };
    var handleDecrement = function () {
        var newValue = clampValue(internalValue - 1);
        setInternalValue(newValue);
        field.onChange(newValue);
    };
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NumberInputContainer, { className: formClassNameConfig.numberInputContainer },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SpinButton, { type: "button", onClick: handleDecrement, className: formClassNameConfig.numberInputButton, disabled: ((_c = fieldConfig.validation) === null || _c === void 0 ? void 0 : _c.min) !== undefined &&
                    typeof fieldConfig.validation.min === 'object' &&
                    internalValue <= +fieldConfig.validation.min.value }, "-"),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.number, type: "number", id: id, onChange: function (e) {
                    field.onChange(e);
                    setInternalValue(+e.target.value);
                }, onBlur: function (e) {
                    field.onBlur();
                    var clampedValue = clampValue(+e.target.value);
                    setInternalValue(clampedValue);
                    field.onChange(clampedValue);
                }, value: internalValue, autoComplete: disableAutocomplete ? 'off' : undefined })),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SpinButton, { type: "button", onClick: handleIncrement, className: formClassNameConfig.numberInputButton, disabled: ((_d = fieldConfig.validation) === null || _d === void 0 ? void 0 : _d.max) !== undefined &&
                    typeof fieldConfig.validation.max === 'object' &&
                    internalValue >= +fieldConfig.validation.max.value }, "+")),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NumberInput);
;
NumberInput.__docgenInfo = { "description": "", "methods": [], "displayName": "NumberInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
NumberInput.__docgenInfo = { "description": "", "methods": [], "displayName": "NumberInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1, templateObject_2;


/***/ }),

/***/ "./src/features/inputs/components/RadioInput.tsx":
/*!*******************************************************!*\
  !*** ./src/features/inputs/components/RadioInput.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/RadioInput.tsx






var RadioGroup = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  display: flex;\n  gap: 16px;\n"], ["\n  display: flex;\n  gap: 16px;\n"])));
var RadioLabel = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].label(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  cursor: pointer;\n"], ["\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  cursor: pointer;\n"])));
var RadioInputStyled = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].input(templateObject_3 || (templateObject_3 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  appearance: none;\n  width: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  border: 1px solid ", ";\n  border-radius: 50%;\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  position: relative;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:checked {\n    background-color: ", ";\n    border-color: ", ";\n  }\n\n  &:checked::after {\n    content: '';\n    display: block;\n    width: 9px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n    height: 9px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n    background-color: white;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"], ["\n  appearance: none;\n  width: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 18px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  border: 1px solid ", ";\n  border-radius: 50%;\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n  position: relative;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:checked {\n    background-color: ", ";\n    border-color: ", ";\n  }\n\n  &:checked::after {\n    content: '';\n    display: block;\n    width: 9px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n    height: 9px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n    background-color: white;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
});
var RadioInput = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label, options = fieldConfig.options;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RadioGroup, { className: formClassNameConfig.radioGroup }, options === null || options === void 0 ? void 0 : options.map(function (option) { return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RadioLabel, { key: option.value, htmlFor: "".concat(id, "-").concat(option.value), className: formClassNameConfig.radioLabel },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RadioInputStyled, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { type: "radio", id: "".concat(id, "-").concat(option.value), name: id, value: option.value, checked: field.value === option.value, className: formClassNameConfig.radioButton })),
            option.label)); })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RadioInput);
;
RadioInput.__docgenInfo = { "description": "", "methods": [], "displayName": "RadioInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
RadioInput.__docgenInfo = { "description": "", "methods": [], "displayName": "RadioInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1, templateObject_2, templateObject_3;


/***/ }),

/***/ "./src/features/inputs/components/SelectInput.tsx":
/*!********************************************************!*\
  !*** ./src/features/inputs/components/SelectInput.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/SelectInput.tsx






var StyledSelect = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].select(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  appearance: none;\n  width: 100%;\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n  background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='8'%3E%3Cpath fill='%239CA3AF' d='M1.41 0L6 4.58 10.59 0 12 1.41l-6 6-6-6z'/%3E%3C/svg%3E\")\n    no-repeat right 12px center;\n  background-size: 12px 8px;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n"], ["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  appearance: none;\n  width: 100%;\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n  background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='8'%3E%3Cpath fill='%239CA3AF' d='M1.41 0L6 4.58 10.59 0 12 1.41l-6 6-6-6z'/%3E%3C/svg%3E\")\n    no-repeat right 12px center;\n  background-size: 12px 8px;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.small;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.text;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.sm;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.md;
});
var SelectInput = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label, options = fieldConfig.options;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledSelect, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.select, id: id }), options === null || options === void 0 ? void 0 : options.map(function (option) { return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("option", { key: option.value, value: option.value }, option.label)); })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SelectInput);
;
SelectInput.__docgenInfo = { "description": "", "methods": [], "displayName": "SelectInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
SelectInput.__docgenInfo = { "description": "", "methods": [], "displayName": "SelectInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1;


/***/ }),

/***/ "./src/features/inputs/components/SwitchInput.tsx":
/*!********************************************************!*\
  !*** ./src/features/inputs/components/SwitchInput.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");

// Filepath: /src/features/inputs/components/SwitchInput.tsx




var SwitchContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].label(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: relative;\n  display: inline-block;\n  width: 40px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 20px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  cursor: pointer;\n"], ["\n  position: relative;\n  display: inline-block;\n  width: 40px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  height: 20px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc */\n  cursor: pointer;\n"])));
var SwitchInputStyled = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].input(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  opacity: 0;\n  width: 0;\n  height: 0;\n  &:checked + .slider {\n    background-color: ", ";\n  }\n  &:focus + .slider {\n    box-shadow: 0 0 1px ", ";\n  }\n  &:checked + .slider:before {\n    transform: translateX(19px); /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n  }\n  &:disabled + .slider {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"], ["\n  opacity: 0;\n  width: 0;\n  height: 0;\n  &:checked + .slider {\n    background-color: ", ";\n  }\n  &:focus + .slider {\n    box-shadow: 0 0 1px ", ";\n  }\n  &:checked + .slider:before {\n    transform: translateX(19px); /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n  }\n  &:disabled + .slider {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
});
var Slider = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].span(templateObject_3 || (templateObject_3 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n  border-radius: 34px;\n  &:hover {\n    background-color: #979797;\n  }\n  &:before {\n    position: absolute;\n    content: '';\n    height: 16px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc slider */\n    width: 16px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc slider */\n    left: 2px; /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n    bottom: 2px; /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n"], ["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n  border-radius: 34px;\n  &:hover {\n    background-color: #979797;\n  }\n  &:before {\n    position: absolute;\n    content: '';\n    height: 16px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc slider */\n    width: 16px; /* Gi\u1EA3m k\u00EDch th\u01B0\u1EDBc slider */\n    left: 2px; /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n    bottom: 2px; /* Ch\u1EC9nh v\u1ECB tr\u00ED slider */\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n"])));
var SwitchInput = function (_a) {
    var id = _a.id, fieldConfig = _a.fieldConfig, _b = _a.formClassNameConfig, formClassNameConfig = _b === void 0 ? {} : _b, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label }, label)),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SwitchContainer, { htmlFor: id, className: formClassNameConfig.switchContainer },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SwitchInputStyled, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, field, { type: "checkbox", id: id, className: formClassNameConfig.switch })),
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Slider, { className: formClassNameConfig.switchSlider })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SwitchInput);
;
SwitchInput.__docgenInfo = { "description": "", "methods": [], "displayName": "SwitchInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
SwitchInput.__docgenInfo = { "description": "", "methods": [], "displayName": "SwitchInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1, templateObject_2, templateObject_3;


/***/ }),

/***/ "./src/features/inputs/components/TextInput.tsx":
/*!******************************************************!*\
  !*** ./src/features/inputs/components/TextInput.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");

// Filepath: /src/features/inputs/components/TextInput.tsx




var TextInput = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, disableAutocomplete = _a.disableAutocomplete, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_2__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_2__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) &&
                typeof fieldConfig.validation.required === 'object' && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_2__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.input, id: id, autoComplete: disableAutocomplete ? 'off' : undefined }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextInput);
;
TextInput.__docgenInfo = { "description": "", "methods": [], "displayName": "TextInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
TextInput.__docgenInfo = { "description": "", "methods": [], "displayName": "TextInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };


/***/ }),

/***/ "./src/features/inputs/components/TextareaInput.tsx":
/*!**********************************************************!*\
  !*** ./src/features/inputs/components/TextareaInput.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");

// Filepath: /src/features/inputs/components/TextareaInput.tsx





var StyledTextarea = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].textarea(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__makeTemplateObject)(["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  width: 100%;\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n\n  min-height: 100px; /* Gi\u1EA3m chi\u1EC1u cao */\n"], ["\n  border: 1px solid ", ";\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  border-radius: 8px; /* Bo tr\u00F2n */\n  font-size: ", "; /* Gi\u1EA3m font-size */\n  width: 100%;\n  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  line-height: 1.5;\n  outline: none;\n\n  &:hover {\n    border-color: ", ";\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 3px ", "; /* Hi\u1EC7u \u1EE9ng focus */\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: #f5f5f5;\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n\n  &::placeholder {\n    color: ", ";\n    opacity: 0.6;\n  }\n\n  /* Add responsive styles using media queries */\n  @media (min-width: ", ") {\n    max-width: 300px;\n  }\n\n  @media (min-width: ", ") {\n    max-width: 400px;\n  }\n\n  min-height: 100px; /* Gi\u1EA3m chi\u1EC1u cao */\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.fontSizes.small;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-700'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors['info-200'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.text;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.sm;
}, function (_a) {
    var theme = _a.theme;
    return theme.breakpoints.md;
});
var TextareaInput = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_5__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledTextarea, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.textarea, id: id, autoComplete: disableAutocomplete ? 'off' : undefined })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextareaInput);
;
TextareaInput.__docgenInfo = { "description": "", "methods": [], "displayName": "TextareaInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
TextareaInput.__docgenInfo = { "description": "", "methods": [], "displayName": "TextareaInput", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
var templateObject_1;


/***/ }),

/***/ "./src/features/inputs/components/TimePicker.tsx":
/*!*******************************************************!*\
  !*** ./src/features/inputs/components/TimePicker.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../theme/ThemeProvider */ "./src/theme/ThemeProvider.tsx");
// Filepath: /src/features/inputs/components/TimePicker.tsx





var TimePicker = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var theme = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    var label = fieldConfig.label;
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
        defaultValue: fieldConfig.defaultValue,
    }).field;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: theme.colors.danger } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, field, { className: formClassNameConfig.time, type: "time", id: id })),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TimePicker);
;
TimePicker.__docgenInfo = { "description": "", "methods": [], "displayName": "TimePicker", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };
TimePicker.__docgenInfo = { "description": "", "methods": [], "displayName": "TimePicker", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "The ID of the input." }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "The field configuration." }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "Optional CSS class names for form elements.", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to show inline error messages." }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to use a horizontal label." }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "Optional label width (for horizontal labels)." }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "The field error (if any)." }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "Whether to disable autocomplete for the input." } } };


/***/ }),

/***/ "./src/features/inputs/components/index.ts":
/*!*************************************************!*\
  !*** ./src/features/inputs/components/index.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckboxInput: () => (/* reexport safe */ _CheckboxInput__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   ComboBox: () => (/* reexport safe */ _ComboBox__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   DateInput: () => (/* reexport safe */ _DateInput__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   DateTimePicker: () => (/* reexport safe */ _DateTimePicker__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   NumberInput: () => (/* reexport safe */ _NumberInput__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   RadioInput: () => (/* reexport safe */ _RadioInput__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   SelectInput: () => (/* reexport safe */ _SelectInput__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   SwitchInput: () => (/* reexport safe */ _SwitchInput__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   TextInput: () => (/* reexport safe */ _TextInput__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   TextareaInput: () => (/* reexport safe */ _TextareaInput__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   TimePicker: () => (/* reexport safe */ _TimePicker__WEBPACK_IMPORTED_MODULE_8__["default"])
/* harmony export */ });
/* harmony import */ var _TextInput__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextInput */ "./src/features/inputs/components/TextInput.tsx");
/* harmony import */ var _TextareaInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TextareaInput */ "./src/features/inputs/components/TextareaInput.tsx");
/* harmony import */ var _CheckboxInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CheckboxInput */ "./src/features/inputs/components/CheckboxInput.tsx");
/* harmony import */ var _SelectInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SelectInput */ "./src/features/inputs/components/SelectInput.tsx");
/* harmony import */ var _RadioInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RadioInput */ "./src/features/inputs/components/RadioInput.tsx");
/* harmony import */ var _DateInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DateInput */ "./src/features/inputs/components/DateInput.tsx");
/* harmony import */ var _NumberInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./NumberInput */ "./src/features/inputs/components/NumberInput.tsx");
/* harmony import */ var _SwitchInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SwitchInput */ "./src/features/inputs/components/SwitchInput.tsx");
/* harmony import */ var _TimePicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TimePicker */ "./src/features/inputs/components/TimePicker.tsx");
/* harmony import */ var _DateTimePicker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DateTimePicker */ "./src/features/inputs/components/DateTimePicker.tsx");
/* harmony import */ var _ComboBox__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ComboBox */ "./src/features/inputs/components/ComboBox.tsx");
// src/features/inputs/components/index.ts













/***/ }),

/***/ "./src/features/inputs/index.ts":
/*!**************************************!*\
  !*** ./src/features/inputs/index.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckboxInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.CheckboxInput),
/* harmony export */   ComboBox: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.ComboBox),
/* harmony export */   DateInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.DateInput),
/* harmony export */   DateTimePicker: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.DateTimePicker),
/* harmony export */   NumberInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.NumberInput),
/* harmony export */   RadioInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.RadioInput),
/* harmony export */   SelectInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.SelectInput),
/* harmony export */   SwitchInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.SwitchInput),
/* harmony export */   TextInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.TextInput),
/* harmony export */   TextareaInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.TextareaInput),
/* harmony export */   TimePicker: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_0__.TimePicker),
/* harmony export */   getInputComponent: () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_2__.getInputComponent),
/* harmony export */   getInputTypeFromValue: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_1__.getInputTypeFromValue),
/* harmony export */   getLayoutComponent: () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_2__.getLayoutComponent),
/* harmony export */   registerInput: () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_2__.registerInput),
/* harmony export */   registerLayout: () => (/* reexport safe */ _registry__WEBPACK_IMPORTED_MODULE_2__.registerLayout)
/* harmony export */ });
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components */ "./src/features/inputs/components/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./src/features/inputs/utils.ts");
/* harmony import */ var _registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./registry */ "./src/features/inputs/registry/index.ts");
// src/features/inputs/index.ts






/***/ }),

/***/ "./src/features/inputs/registry/InputRegistry.ts":
/*!*******************************************************!*\
  !*** ./src/features/inputs/registry/InputRegistry.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getInputComponent: () => (/* binding */ getInputComponent),
/* harmony export */   registerInput: () => (/* binding */ registerInput)
/* harmony export */ });
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components */ "./src/features/inputs/components/index.ts");

// Create a map of input types to components
// @ts-expect-error
var inputRegistry = {
    text: _components__WEBPACK_IMPORTED_MODULE_0__.TextInput,
    email: _components__WEBPACK_IMPORTED_MODULE_0__.TextInput,
    password: _components__WEBPACK_IMPORTED_MODULE_0__.TextInput,
    tel: _components__WEBPACK_IMPORTED_MODULE_0__.TextInput,
    url: _components__WEBPACK_IMPORTED_MODULE_0__.TextInput,
    checkbox: _components__WEBPACK_IMPORTED_MODULE_0__.CheckboxInput,
    textarea: _components__WEBPACK_IMPORTED_MODULE_0__.TextareaInput,
    select: _components__WEBPACK_IMPORTED_MODULE_0__.SelectInput,
    radio: _components__WEBPACK_IMPORTED_MODULE_0__.RadioInput,
    date: _components__WEBPACK_IMPORTED_MODULE_0__.DateInput,
    number: _components__WEBPACK_IMPORTED_MODULE_0__.NumberInput,
    switch: _components__WEBPACK_IMPORTED_MODULE_0__.SwitchInput,
    time: _components__WEBPACK_IMPORTED_MODULE_0__.TimePicker,
    'datetime-local': _components__WEBPACK_IMPORTED_MODULE_0__.DateTimePicker,
    combobox: _components__WEBPACK_IMPORTED_MODULE_0__.ComboBox,
};
/**
 * Registers a new input component for a given type.
 *
 * @param type - The input type to register.
 * @param component - The component to register.
 */
var registerInput = function (type, component) {
    inputRegistry[type] = component;
};
/**
 * Retrieves the component registered for a given input type.
 *
 * @param type - The input type to retrieve the component for.
 * @returns The registered component, or undefined if no component is registered for the type.
 */
var getInputComponent = function (type) {
    return inputRegistry[type];
};


/***/ }),

/***/ "./src/features/inputs/registry/LayoutRegistry.ts":
/*!********************************************************!*\
  !*** ./src/features/inputs/registry/LayoutRegistry.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLayoutComponent: () => (/* binding */ getLayoutComponent),
/* harmony export */   registerLayout: () => (/* binding */ registerLayout)
/* harmony export */ });
/* harmony import */ var _components_FlexLayout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/FlexLayout */ "./src/features/inputs/registry/components/FlexLayout.tsx");
/* harmony import */ var _components_GridLayout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/GridLayout */ "./src/features/inputs/registry/components/GridLayout.tsx");
// Filepath: /src/features/core/LayoutRegistry.ts


// Create a map of layout types to components
var layoutRegistry = {
    flex: _components_FlexLayout__WEBPACK_IMPORTED_MODULE_0__.FlexLayout,
    grid: _components_GridLayout__WEBPACK_IMPORTED_MODULE_1__.GridLayout,
};
/**
 * Registers a new layout component for a given type.
 *
 * @param type - The layout type to register.
 * @param component - The component to register.
 */
var registerLayout = function (type, component) {
    layoutRegistry[type] = component;
};
/**
 * Retrieves the component registered for a given layout type.
 *
 * @param type - The layout type to retrieve the component for.
 * @returns The registered component, or undefined if no component is registered for the type.
 */
var getLayoutComponent = function (type) {
    return layoutRegistry[type];
};


/***/ }),

/***/ "./src/features/inputs/registry/components/FlexLayout.tsx":
/*!****************************************************************!*\
  !*** ./src/features/inputs/registry/components/FlexLayout.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FlexLayout: () => (/* binding */ FlexLayout)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
// Filepath: /src/features/inputs/registry/components/FlexLayout.tsx



var StyledFlexLayout = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].form(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__makeTemplateObject)(["\n  display: flex;\n  flex-direction: column;\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n"], ["\n  display: flex;\n  flex-direction: column;\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n"])), function (_a) {
    var theme = _a.theme, $gap = _a.$gap;
    return $gap || theme.space.md;
}, function (_a) {
    var theme = _a.theme;
    return theme.space['3xl'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.background;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.radii.md;
});
var FlexLayout = function (_a) {
    var onSubmit = _a.onSubmit, children = _a.children, className = _a.className, formClassNameConfig = _a.formClassNameConfig, style = _a.style, layoutConfig = _a.layoutConfig, horizontalLabel = _a.horizontalLabel;
    var handleSubmit = function (event) {
        event.preventDefault();
        onSubmit(event);
    };
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledFlexLayout, { onSubmit: handleSubmit, className: "".concat(className || '', " ").concat((formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.formContainer) || ''), style: style, "$gap": layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.gap, "data-layoutconfig": JSON.stringify(layoutConfig), "data-horizontallabel": horizontalLabel ? 'true' : 'false' }, children));
};

;
FlexLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FlexLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };
FlexLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FlexLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };
var templateObject_1;


/***/ }),

/***/ "./src/features/inputs/registry/components/GridLayout.tsx":
/*!****************************************************************!*\
  !*** ./src/features/inputs/registry/components/GridLayout.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridLayout: () => (/* binding */ GridLayout)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
// Filepath: /src/features/inputs/registry/components/GridLayout.tsx



var StyledGridLayout = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].form(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__makeTemplateObject)(["\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(", ", 1fr)\n  );\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n  ", "\n"], ["\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(", ", 1fr)\n  );\n  gap: ", ";\n  padding: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n  ", "\n"])), function (props) { return props.$minWidth || '250px'; }, function (_a) {
    var theme = _a.theme, $gap = _a.$gap;
    return $gap || theme.space.md;
}, function (_a) {
    var theme = _a.theme;
    return theme.space['3xl'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.background;
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
}, function (_a) {
    var theme = _a.theme;
    return theme.radii.md;
}, function (props) {
    var _a = props.$breakpoints, $breakpoints = _a === void 0 ? props.theme.breakpoints : _a;
    return Object.entries($breakpoints)
        .sort(function (_a, _b) {
        var a = _a[1];
        var b = _b[1];
        return Number(a) - Number(b);
    }) // Sort breakpoints in ascending order
        .map(function (_a) {
        var value = _a[1];
        return "\n          @media (min-width: ".concat(value, "px) {\n            grid-template-columns: repeat(\n              auto-fit,\n              minmax(\n                ").concat(function (props) { return props.$minWidth || '250px'; }, ",\n                1fr\n              )\n            );\n          }\n        ");
    });
});
var GridLayout = function (_a) {
    var onSubmit = _a.onSubmit, children = _a.children, className = _a.className, formClassNameConfig = _a.formClassNameConfig, style = _a.style, layoutConfig = _a.layoutConfig, horizontalLabel = _a.horizontalLabel, $minWidth = _a.$minWidth, $gap = _a.$gap, $breakpoints = _a.$breakpoints;
    var handleSubmit = function (event) {
        event.preventDefault();
        onSubmit(event);
    };
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledGridLayout, { onSubmit: handleSubmit, className: "".concat(className || '', " ").concat((formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.formContainer) || ''), style: style, "$minWidth": $minWidth, "$gap": $gap, "$breakpoints": $breakpoints, "data-layoutconfig": JSON.stringify(layoutConfig), "data-horizontallabel": horizontalLabel ? 'true' : 'false' }, children));
};

;
GridLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "GridLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "$minWidth": { "required": false, "tsType": { "name": "string" }, "description": "" }, "$gap": { "required": false, "tsType": { "name": "string" }, "description": "" }, "$breakpoints": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{ [key: string]: number }", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "number", "required": true } }] } }, "description": "" } } };
GridLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "GridLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "$minWidth": { "required": false, "tsType": { "name": "string" }, "description": "" }, "$gap": { "required": false, "tsType": { "name": "string" }, "description": "" }, "$breakpoints": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{ [key: string]: number }", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "number", "required": true } }] } }, "description": "" } } };
var templateObject_1;


/***/ }),

/***/ "./src/features/inputs/registry/index.ts":
/*!***********************************************!*\
  !*** ./src/features/inputs/registry/index.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getInputComponent: () => (/* reexport safe */ _InputRegistry__WEBPACK_IMPORTED_MODULE_0__.getInputComponent),
/* harmony export */   getLayoutComponent: () => (/* reexport safe */ _LayoutRegistry__WEBPACK_IMPORTED_MODULE_1__.getLayoutComponent),
/* harmony export */   registerInput: () => (/* reexport safe */ _InputRegistry__WEBPACK_IMPORTED_MODULE_0__.registerInput),
/* harmony export */   registerLayout: () => (/* reexport safe */ _LayoutRegistry__WEBPACK_IMPORTED_MODULE_1__.registerLayout)
/* harmony export */ });
/* harmony import */ var _InputRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputRegistry */ "./src/features/inputs/registry/InputRegistry.ts");
/* harmony import */ var _LayoutRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LayoutRegistry */ "./src/features/inputs/registry/LayoutRegistry.ts");
// src/features/inputs/registry/index.ts




/***/ }),

/***/ "./src/features/inputs/utils.ts":
/*!**************************************!*\
  !*** ./src/features/inputs/utils.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getInputTypeFromValue: () => (/* binding */ getInputTypeFromValue)
/* harmony export */ });
/**
 * Maps a value to an InputType.
 *
 * @param value - The value to map.
 * @returns The corresponding InputType.
 */
var getInputTypeFromValue = function (value) {
    if (typeof value === 'string') {
        return 'text';
    }
    if (typeof value === 'number') {
        return 'number';
    }
    if (typeof value === 'boolean') {
        return 'checkbox';
    }
    if (Array.isArray(value)) {
        return 'select'; // TODO: Handle array input type
    }
    return 'text'; // Default
};


/***/ }),

/***/ "./src/features/validation/ValidationSchemaRegistry.ts":
/*!*************************************************************!*\
  !*** ./src/features/validation/ValidationSchemaRegistry.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getValidationSchema: () => (/* binding */ getValidationSchema),
/* harmony export */   registerValidationSchema: () => (/* binding */ registerValidationSchema)
/* harmony export */ });
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! yup */ "./node_modules/yup/index.esm.js");
// Filepath: /src/features/validation/ValidationSchemaRegistry.ts

// Create a map of input types to Yup schema
// @ts-expect-error
var validationSchemaRegistry = {
    text: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    email: yup__WEBPACK_IMPORTED_MODULE_0__.string().email('Invalid email format'),
    password: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    tel: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    url: yup__WEBPACK_IMPORTED_MODULE_0__.string().url('Invalid URL format'),
    checkbox: yup__WEBPACK_IMPORTED_MODULE_0__.boolean(),
    textarea: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    select: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    radio: yup__WEBPACK_IMPORTED_MODULE_0__.boolean(),
    date: yup__WEBPACK_IMPORTED_MODULE_0__.date(),
    number: yup__WEBPACK_IMPORTED_MODULE_0__.number(),
    switch: yup__WEBPACK_IMPORTED_MODULE_0__.boolean(),
    time: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    'datetime-local': yup__WEBPACK_IMPORTED_MODULE_0__.string(),
    combobox: yup__WEBPACK_IMPORTED_MODULE_0__.string(),
};
/**
 * Registers a new validation schema for a given type.
 *
 * @param type - The input type to register.
 * @param schema - The Yup schema to register.
 */
var registerValidationSchema = function (type, schema) {
    validationSchemaRegistry[type] = schema;
};
/**
 * Retrieves the validation schema registered for a given input type.
 *
 * @param type - The input type to retrieve the schema for.
 * @returns The registered schema, or undefined if no schema is registered for the type.
 */
var getValidationSchema = function (type) {
    return validationSchemaRegistry[type];
};


/***/ }),

/***/ "./src/features/validation/index.ts":
/*!******************************************!*\
  !*** ./src/features/validation/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createValidationSchema: () => (/* reexport safe */ _validationSchema__WEBPACK_IMPORTED_MODULE_0__.createValidationSchema)
/* harmony export */ });
/* harmony import */ var _validationSchema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validationSchema */ "./src/features/validation/validationSchema.ts");
// src/features/validation/index.ts



/***/ }),

/***/ "./src/features/validation/validationSchema.ts":
/*!*****************************************************!*\
  !*** ./src/features/validation/validationSchema.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createValidationSchema: () => (/* binding */ createValidationSchema)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! yup */ "./node_modules/yup/index.esm.js");
/* harmony import */ var _ValidationSchemaRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValidationSchemaRegistry */ "./src/features/validation/ValidationSchemaRegistry.ts");
// Filepath: /src/features/validation/validationSchema.ts



/**
 * Handles the 'required' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'required' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handleRequired = function (fieldSchema, ruleValue, validationMessages) {
    var requiredMessage = typeof ruleValue === 'object'
        ? ruleValue.message
        : (validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.required) || 'This field is required';
    return fieldSchema.required(requiredMessage);
};
/**
 * Handles the 'minLength' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'minLength' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handleMinLength = function (fieldSchema, ruleValue, validationMessages) {
    var _a;
    if (typeof ruleValue === 'number' ||
        typeof ruleValue === 'string' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'number' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'string') {
        var value = typeof ruleValue === 'number' || typeof ruleValue === 'string'
            ? ruleValue
            : ruleValue.value;
        var message = ruleValue.message ||
            ((_a = validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.minLength) === null || _a === void 0 ? void 0 : _a.replace('{value}', value.toString())) ||
            "minLength should be ".concat(value);
        return fieldSchema.min(value, message);
    }
    return fieldSchema;
};
/**
 * Handles the 'maxLength' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'maxLength' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handleMaxLength = function (fieldSchema, ruleValue, validationMessages) {
    var _a;
    if (typeof ruleValue === 'number' ||
        typeof ruleValue === 'string' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'number' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'string') {
        var value = typeof ruleValue === 'number' || typeof ruleValue === 'string'
            ? ruleValue
            : ruleValue.value;
        var message = ruleValue.message ||
            ((_a = validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.maxLength) === null || _a === void 0 ? void 0 : _a.replace('{value}', value.toString())) ||
            "maxLength should be ".concat(value);
        return fieldSchema.max(value, message);
    }
    return fieldSchema;
};
/**
 * Handles the 'min' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'min' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handleMin = function (fieldSchema, ruleValue, validationMessages) {
    var _a;
    if (typeof ruleValue === 'number' ||
        typeof ruleValue === 'string' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'number' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'string') {
        var value = typeof ruleValue === 'number' || typeof ruleValue === 'string'
            ? ruleValue
            : ruleValue.value;
        var message = ruleValue.message ||
            ((_a = validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.min) === null || _a === void 0 ? void 0 : _a.replace('{value}', value.toString())) ||
            "min should be ".concat(value);
        return fieldSchema.min(value, message);
    }
    return fieldSchema;
};
/**
 * Handles the 'max' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'max' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handleMax = function (fieldSchema, ruleValue, validationMessages) {
    var _a;
    if (typeof ruleValue === 'number' ||
        typeof ruleValue === 'string' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'number' ||
        typeof (ruleValue === null || ruleValue === void 0 ? void 0 : ruleValue.value) === 'string') {
        var value = typeof ruleValue === 'number' || typeof ruleValue === 'string'
            ? ruleValue
            : ruleValue.value;
        var message = ruleValue.message ||
            ((_a = validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.max) === null || _a === void 0 ? void 0 : _a.replace('{value}', value.toString())) ||
            "max should be ".concat(value);
        return fieldSchema.max(value, message);
    }
    return fieldSchema;
};
/**
 * Handles the 'pattern' validation rule.
 *
 * @param fieldSchema - The current field schema.
 * @param ruleValue - The value of the 'pattern' rule.
 * @param validationMessages - The validation messages.
 * @returns The updated field schema.
 */
var handlePattern = function (fieldSchema, ruleValue, validationMessages) {
    var regex = ruleValue instanceof RegExp ? ruleValue : new RegExp(ruleValue.value);
    var message = ruleValue.message || (validationMessages === null || validationMessages === void 0 ? void 0 : validationMessages.pattern) || 'Invalid format';
    return fieldSchema.matches(regex, { message: message, excludeEmptyString: true });
};
/**
 * Applies a custom validation function to the field schema.
 *
 * @param fieldSchema - The current field schema.
 * @param validate - The custom validation function.
 * @returns The updated field schema.
 */
var applyCustomValidation = function (fieldSchema, validate) {
    return fieldSchema.test('custom-validation', 'Custom validation failed', function (value, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(void 0, void 0, void 0, function () {
        var result;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, validate(value, context.parent)];
                case 1:
                    result = _a.sent();
                    if (typeof result === 'string') {
                        return [2 /*return*/, context.createError({
                                path: context.path,
                                message: result,
                            })];
                    }
                    return [2 /*return*/, result !== false];
            }
        });
    }); });
};
/**
 * Creates a Yup validation schema based on the provided form configuration.
 *
 * @param config - The form configuration.
 * @param globalValidationMessages - Optional global validation messages.
 * @returns The Yup schema.
 */
var createValidationSchema = function (config, globalValidationMessages) {
    var shape = {};
    var validationHandlers = {
        required: handleRequired,
        minLength: function (fieldSchema, ruleValue, validationMessages) {
            return handleMinLength(fieldSchema, ruleValue, validationMessages);
        },
        maxLength: function (fieldSchema, ruleValue, validationMessages) {
            return handleMaxLength(fieldSchema, ruleValue, validationMessages);
        },
        min: function (fieldSchema, ruleValue, validationMessages) {
            return handleMin(fieldSchema, ruleValue, validationMessages);
        },
        max: function (fieldSchema, ruleValue, validationMessages) {
            return handleMax(fieldSchema, ruleValue, validationMessages);
        },
        pattern: function (fieldSchema, ruleValue, validationMessages) {
            return handlePattern(fieldSchema, ruleValue, validationMessages);
        },
    };
    for (var fieldId in config) {
        var fieldConfig = config[fieldId];
        var validation = fieldConfig.validation, type = fieldConfig.type, validationMessages = fieldConfig.validationMessages;
        // Merge global and field-level validation messages
        var mergedValidationMessages = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, globalValidationMessages), validationMessages);
        if (type === undefined) {
            console.warn("Field type is undefined for field: ".concat(fieldId));
        }
        var fieldSchema = (0,_ValidationSchemaRegistry__WEBPACK_IMPORTED_MODULE_1__.getValidationSchema)(type) || yup__WEBPACK_IMPORTED_MODULE_0__.mixed();
        if (validation) {
            var validate = validation.validate, otherValidations = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(validation, ["validate"]);
            for (var rule in otherValidations) {
                if (otherValidations.hasOwnProperty(rule)) {
                    var ruleValue = validation[rule];
                    var handler = validationHandlers[rule];
                    if (handler) {
                        fieldSchema = handler(fieldSchema, ruleValue, mergedValidationMessages);
                    }
                }
            }
            if (typeof validate === 'function') {
                fieldSchema = applyCustomValidation(fieldSchema, validate);
            }
        }
        shape[fieldId] = fieldSchema;
    }
    return yup__WEBPACK_IMPORTED_MODULE_0__.object().shape(shape);
};


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckboxInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.CheckboxInput),
/* harmony export */   ComboBox: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.ComboBox),
/* harmony export */   DateInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.DateInput),
/* harmony export */   DateTimePicker: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.DateTimePicker),
/* harmony export */   DynamicForm: () => (/* reexport safe */ _DynamicForm__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   DynamicFormProvider: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.DynamicFormProvider),
/* harmony export */   ErrorRenderer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_3__.ErrorRenderer),
/* harmony export */   ErrorSummary: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_3__.ErrorSummary),
/* harmony export */   FormContainerProps: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.FormContainerProps),
/* harmony export */   FormContent: () => (/* reexport safe */ _features_form_renderer__WEBPACK_IMPORTED_MODULE_1__.FormContent),
/* harmony export */   FormFooter: () => (/* reexport safe */ _features_form_renderer__WEBPACK_IMPORTED_MODULE_1__.FormFooter),
/* harmony export */   FormLayout: () => (/* reexport safe */ _features_form_renderer__WEBPACK_IMPORTED_MODULE_1__.FormLayout),
/* harmony export */   FormRenderer: () => (/* reexport safe */ _features_form_renderer__WEBPACK_IMPORTED_MODULE_1__.FormRenderer),
/* harmony export */   InputWrapperProps: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.InputWrapperProps),
/* harmony export */   LabelProps: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.LabelProps),
/* harmony export */   NumberInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.NumberInput),
/* harmony export */   RadioInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.RadioInput),
/* harmony export */   SelectInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.SelectInput),
/* harmony export */   SwitchInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.SwitchInput),
/* harmony export */   TextInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.TextInput),
/* harmony export */   TextareaInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.TextareaInput),
/* harmony export */   TimePicker: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.TimePicker),
/* harmony export */   createTheme: () => (/* reexport safe */ _theme__WEBPACK_IMPORTED_MODULE_4__.createTheme),
/* harmony export */   debounce: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.debounce),
/* harmony export */   defaultTheme: () => (/* reexport safe */ _theme__WEBPACK_IMPORTED_MODULE_4__.defaultTheme),
/* harmony export */   flattenConfig: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.flattenConfig),
/* harmony export */   flattenObject: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.flattenObject),
/* harmony export */   getErrorMessage: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.getErrorMessage),
/* harmony export */   getFields: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.getFields),
/* harmony export */   getInputComponent: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.getInputComponent),
/* harmony export */   getInputTypeFromValue: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.getInputTypeFromValue),
/* harmony export */   getLayoutComponent: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.getLayoutComponent),
/* harmony export */   loadFromLocalStorage: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.loadFromLocalStorage),
/* harmony export */   mergeClassNames: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.mergeClassNames),
/* harmony export */   registerInput: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.registerInput),
/* harmony export */   registerLayout: () => (/* reexport safe */ _features_inputs__WEBPACK_IMPORTED_MODULE_2__.registerLayout),
/* harmony export */   saveToLocalStorage: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.saveToLocalStorage),
/* harmony export */   shouldRenderField: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.shouldRenderField),
/* harmony export */   useDynamicForm: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.useDynamicForm),
/* harmony export */   useFormFields: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.useFormFields),
/* harmony export */   useRHFOptions: () => (/* reexport safe */ _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__.useRHFOptions)
/* harmony export */ });
/* harmony import */ var _features_dynamic_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./features/dynamic-form */ "./src/features/dynamic-form/index.ts");
/* harmony import */ var _features_form_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./features/form-renderer */ "./src/features/form-renderer/index.ts");
/* harmony import */ var _features_inputs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./features/inputs */ "./src/features/inputs/index.ts");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components */ "./src/components/index.ts");
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./theme */ "./src/theme/index.ts");
/* harmony import */ var _DynamicForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DynamicForm */ "./src/DynamicForm.tsx");
// src/index.tsx








/***/ }),

/***/ "./src/styles.ts":
/*!***********************!*\
  !*** ./src/styles.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorMessage: () => (/* reexport safe */ _components_ErrorMessage__WEBPACK_IMPORTED_MODULE_6__.ErrorMessage),
/* harmony export */   FormContainer: () => (/* reexport safe */ _components_FormContainer__WEBPACK_IMPORTED_MODULE_0__.FormContainer),
/* harmony export */   GridFormContainer: () => (/* reexport safe */ _components_GridFormContainer__WEBPACK_IMPORTED_MODULE_1__.GridFormContainer),
/* harmony export */   Input: () => (/* reexport safe */ _components_Input__WEBPACK_IMPORTED_MODULE_2__.Input),
/* harmony export */   InputWrapper: () => (/* reexport safe */ _components_InputWrapper__WEBPACK_IMPORTED_MODULE_4__.InputWrapper),
/* harmony export */   Label: () => (/* reexport safe */ _components_Label__WEBPACK_IMPORTED_MODULE_3__.Label),
/* harmony export */   SubmitButton: () => (/* reexport safe */ _components_SubmitButton__WEBPACK_IMPORTED_MODULE_5__.SubmitButton)
/* harmony export */ });
/* harmony import */ var _components_FormContainer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/FormContainer */ "./src/components/FormContainer/index.ts");
/* harmony import */ var _components_GridFormContainer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/GridFormContainer */ "./src/components/GridFormContainer/index.ts");
/* harmony import */ var _components_Input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Input */ "./src/components/Input/index.ts");
/* harmony import */ var _components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Label */ "./src/components/Label/index.ts");
/* harmony import */ var _components_InputWrapper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/InputWrapper */ "./src/components/InputWrapper/index.ts");
/* harmony import */ var _components_SubmitButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/SubmitButton */ "./src/components/SubmitButton/index.ts");
/* harmony import */ var _components_ErrorMessage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/ErrorMessage */ "./src/components/ErrorMessage/index.ts");
// Filepath: /src/styles.ts









/***/ }),

/***/ "./src/theme/ThemeProvider.tsx":
/*!*************************************!*\
  !*** ./src/theme/ThemeProvider.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppThemeContext: () => (/* binding */ AppThemeContext),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   useTheme: () => (/* binding */ useTheme)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./src/theme/index.ts");

// Filepath: /src/theme/ThemeProvider.tsx



/**
 * The theme context.
 */
var AppThemeContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(_index__WEBPACK_IMPORTED_MODULE_1__.defaultTheme);
/**
 * Custom hook to access the theme context.
 *
 * @returns The theme object.
 */
var useTheme = function () { return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppThemeContext); };
var ThemeProvider = function (_a) {
    var children = _a.children, theme = _a.theme;
    var mergedTheme = theme ? (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, _index__WEBPACK_IMPORTED_MODULE_1__.defaultTheme), theme) : _index__WEBPACK_IMPORTED_MODULE_1__.defaultTheme;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AppThemeContext.Provider, { value: mergedTheme },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(styled_components__WEBPACK_IMPORTED_MODULE_3__.ThemeProvider, { theme: mergedTheme }, children)));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeProvider);
;
ThemeProvider.__docgenInfo = { "description": "", "methods": [], "displayName": "ThemeProvider", "props": { "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" } } };
ThemeProvider.__docgenInfo = { "description": "", "methods": [], "displayName": "ThemeProvider", "props": { "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" } } };


/***/ }),

/***/ "./src/theme/index.ts":
/*!****************************!*\
  !*** ./src/theme/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createTheme: () => (/* binding */ createTheme),
/* harmony export */   defaultTheme: () => (/* binding */ defaultTheme)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");

/**
 * Default theme for the form.
 */
var defaultTheme = {
    colors: {
        primary: '#FF902F',
        'primary-hover': '#e5791e',
        secondary: '#212529',
        'secondary-hover': '#0d0f10',
        success: '#55CE63',
        'success-hover': '#39b248',
        info: '#009EFB',
        'info-hover': '#0075c7',
        warning: '#FFBC34',
        'warning-hover': '#e5a62a',
        danger: '#FC133D',
        'danger-hover': '#e51037',
        blue: '#00c5fb',
        'blue-hover': '#0097c7',
        maroon: '#f43b48',
        'maroon-hover': '#dc2734',
        violet: '#667eea',
        'violet-hover': '#5063c9',
        dark: '#29344a',
        light: '#D5D8DA',
        white: '#FFF',
        black: '#000',
        purple: '#9368E9',
        pink: '#FC6075',
        teal: '#02a8b5',
        cyan: '#299cdb',
        green: '#35BA67',
        orange: '#fbc418',
        indigo: '#4d5ddb',
        yellow: '#ffd200',
        'primary-100': '#FFF5EC',
        'primary-200': '#FFEBDA',
        'primary-300': '#FFE1C7',
        'primary-400': '#FFD7B4',
        'primary-500': '#FFCDA2',
        'primary-600': '#FFC38F',
        'primary-700': '#FFB97C',
        'primary-800': '#FFAF69',
        'primary-900': '#FF8012',
        'primary-1000': '#FF801F',
        'secondary-100': '#E9E9EA',
        'secondary-200': '#D3D3D4',
        'secondary-300': '#BCBEBF',
        'secondary-400': '#A6A8A9',
        'secondary-500': '#909294',
        'secondary-600': '#7A7C7F',
        'secondary-700': '#646669',
        'secondary-800': '#4D5154',
        'secondary-900': '#373B3E',
        'light-100': '#FCFCFC',
        'light-200': '#F9F9F9',
        'light-300': '#F5F6F7',
        'light-400': '#F2F3F4',
        'light-500': '#EFF0F1',
        'light-600': '#ECEDEE',
        'light-700': '#E9EAEB',
        'light-800': '#E5E7E9',
        'light-900': '#E2E4E6',
        'success-100': '#EEFAEF',
        'success-200': '#DDF5E0',
        'success-300': '#CCF0D0',
        'success-400': '#BBEBC1',
        'success-500': '#AAE7B1',
        'success-600': '#99E2A1',
        'success-700': '#88DD92',
        'success-800': '#77D882',
        'success-900': '#66D373',
        'danger-100': '#FEEAEE',
        'danger-200': '#FDD5DC',
        'danger-300': '#FCC0CB',
        'danger-400': '#FBABB9',
        'danger-500': '#FB96A8',
        'danger-600': '#FA8197',
        'danger-700': '#F96C85',
        'danger-800': '#F85774',
        'danger-900': '#F74262',
        'info-100': '#E6F5FF',
        'info-200': '#CCECFE',
        'info-300': '#B3E2FE',
        'info-400': '#99D8FD',
        'info-500': '#80CFFD',
        'info-600': '#66C5FD',
        'info-700': '#4DBBFC',
        'info-800': '#33B1FC',
        'info-900': '#1AA8FB',
        'warning-100': '#FFF8EB',
        'warning-200': '#FFF2D6',
        'warning-300': '#FFEBC2',
        'warning-400': '#FFE4AE',
        'warning-500': '#FFDE9A',
        'warning-600': '#FFD785',
        'warning-700': '#FFD071',
        'warning-800': '#FFC95D',
        'warning-900': '#FFC348',
        'purple-100': '#F4F0FD',
        'purple-200': '#E9E1FB',
        'purple-300': '#DFD2F8',
        'purple-400': '#D4C3F6',
        'purple-500': '#C9B4F4',
        'purple-600': '#BEA4F2',
        'purple-700': '#B395F0',
        'purple-800': '#A986ED',
        'purple-900': '#9E77EB',
        'pink-100': '#FFEFF1',
        'pink-200': '#FEDFE3',
        'pink-300': '#FECFD6',
        'pink-400': '#FEBFC8',
        'pink-500': '#FEB0BA',
        'pink-600': '#FDA0AC',
        'pink-700': '#FD909E',
        'pink-800': '#FD8091',
        'pink-900': '#FF445D',
        text: '#5B6670',
        'title-color': '#373B3E',
        'sub-title': '#4D5154',
        background: '#f7f7f7',
        'body-dark-bg': '#263238',
        'wrapper-bg': '#f1f5f6',
        'text-muted': '#9595b5',
        'black-bg': '#16191c',
        'theme-title': '#97A2D2',
        'input-bg': '#2c2c50',
        'form-control-bg': '#FFF',
        'default-background': '#f7f8f9',
        // Social Icons Colors
        facebook: '#3B5998',
        twitter: '#00ACEE',
        google: '#DD4B39',
        telegram: '#0088CC',
        linkedin: '#0E76A8',
        youtube: '#C4302B',
        instagram: '#3F729B',
        reddit: '#C6C6C6',
        pinterest: '#cc2127',
        vk: '#2B587A',
        rss: '#EE802F',
        skype: '#00AFF0',
        xing: '#126567',
        tumblr: '#34526F',
        email: '#6567A5',
        delicious: '#205CC0',
        stumbleupon: '#F74425',
        digg: '#191919',
        blogger: '#FC4F08',
        flickr: '#FF0084',
        vimeo: '#86C9EF',
        yahoo: '#720E9E',
        gplus: '#DD4B39',
        appstore: '#000',
        // Gradient Variables
        'primary-gradient': 'linear-gradient(90.31deg, #FF902F -1.02%, #FF2D3D 132.59%)',
        'blue-gradient': 'linear-gradient(to right, #00c5fb 0%, #0253cc 100%)',
        'maroon-gradient': 'linear-gradient(to right, #f43b48 0%, #453a94 100%)',
        'violet-gradient': 'linear-gradient(to right, #667eea 0%, #764ba2 100%)',
        border: '#D3D3D4',
        'default-border': '#A6A8A9',
        'dark-border': '#2e3840',
        'input-border': '#e9edf6',
        error: '#dc3545',
    },
    space: {
        xs: '2px',
        sm: '4px',
        md: '6.5px',
        lg: '12px',
        xl: '16px',
        '2xl': '24px',
        '3xl': '32px',
        '4xl': '40px',
        '5xl': '48px',
        '6xl': '52px',
        '7xl': '64px',
        '8xl': '72px',
        '9xl': '80px',
    },
    fontSizes: {
        '8': '8px',
        '9': '9px',
        '10': '10px',
        '11': '11px',
        '12': '12px',
        '13': '13px',
        '14': '14px',
        small: '13px',
        medium: '15px',
        '17': '17px',
        '18': '18px',
        '19': '19px',
        large: '20px',
        '22': '22px',
        '23': '23px',
        '24': '24px',
        '26': '26px',
        '28': '28px',
        '30': '30px',
        '32': '32px',
        '34': '34px',
        '36': '36px',
        '40': '40px',
        '42': '42px',
        '48': '48px',
        '50': '50px',
        '54': '54px',
        '60': '60px',
        h1: '2rem',
        h2: '1.75rem',
        h3: '1.5rem',
        h4: '1.25rem',
        h5: '1.15rem',
        h6: '1rem',
    },
    fontWeights: {
        lighter: 'lighter',
        light: 300,
        normal: 400,
        medium: 500,
        semibold: 600,
        bold: 700,
        bolder: 'bolder',
    },
    radii: {
        sm: '3px',
        md: '4px',
        lg: '5px',
        xl: '8px',
        '2xl': '12px',
        rounded: '50%',
        pill: '1.5rem',
    },
    breakpoints: {
        sm: '576px',
        md: '768px',
        lg: '992px',
        xl: '1200px',
    },
    shadows: {
        sm: '0px 4px 8px 0px rgba(255, 255, 255, 0.15)',
        md: '0px 4px 16px 0px rgba(255, 255, 255, 0.7)',
        lg: '0px 4px 24px 0px #BCBCBC40',
    },
};
/**
 * Create a custom theme by extending the default theme.
 *
 * @param customTheme - The custom theme object.
 * @returns The merged theme object.
 */
var createTheme = function (customTheme) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme), customTheme), { colors: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.colors), (customTheme.colors || {})), space: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.space), (customTheme.space || {})), fontSizes: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.fontSizes), (customTheme.fontSizes || {})), fontWeights: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.fontWeights), (customTheme.fontWeights || {})), radii: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.radii), (customTheme.radii || {})), breakpoints: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, defaultTheme.breakpoints), (customTheme.breakpoints || {})) });
};


/***/ })

}]);
//# sourceMappingURL=src_index_ts.iframe.bundle.js.map