"use strict";
self["webpackHotUpdate_matthew_ngo_react_dynamic_form"]("src_index_ts",{

/***/ "./src/features/form-renderer/components/FormLayout.tsx":
/*!**************************************************************!*\
  !*** ./src/features/form-renderer/components/FormLayout.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../theme */ "./src/theme/index.ts");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");

// Filepath: /src/features/form-renderer/components/FormLayout.tsx





var FormLayout = function (_a) {
    var onSubmit = _a.onSubmit, children = _a.children, className = _a.className, formClassNameConfig = _a.formClassNameConfig, style = _a.style, layout = _a.layout, layoutConfig = _a.layoutConfig, horizontalLabel = _a.horizontalLabel, theme = _a.theme;
    var mergedTheme = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
        return theme ? (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, _theme__WEBPACK_IMPORTED_MODULE_1__.defaultTheme), theme) : _theme__WEBPACK_IMPORTED_MODULE_1__.defaultTheme;
    }, [theme]);
    var formState = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useFormContext)().formState;
    var handleSubmit = function (event) {
        event.preventDefault();
        onSubmit(event);
    };
    // Use GridFormContainer for grid layout, FormContainer for others
    var LayoutComponent = layout === 'grid' ? _styles__WEBPACK_IMPORTED_MODULE_2__.GridFormContainer : _styles__WEBPACK_IMPORTED_MODULE_2__.FormContainer;
    var layoutComponentProps = {
        onSubmit: handleSubmit,
        className: "".concat(className || '', " ").concat((formClassNameConfig === null || formClassNameConfig === void 0 ? void 0 : formClassNameConfig.formContainer) || ''),
        style: style,
        $layout: layout, // Pass layout type to styled component
        $layoutConfig: layoutConfig,
        $horizontalLabel: horizontalLabel,
        $minWidth: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.minWidth, // Pass minWidth to GridFormContainer
        $gap: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.gap, // Pass gap to GridFormContainer
        $breakpoints: layoutConfig === null || layoutConfig === void 0 ? void 0 : layoutConfig.breakpoints, // Pass breakpoints
        children: children,
    };
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(styled_components__WEBPACK_IMPORTED_MODULE_5__.ThemeProvider, { theme: mergedTheme },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LayoutComponent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, layoutComponentProps))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormLayout);
;
FormLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FormLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layout": { "required": true, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };
FormLayout.__docgenInfo = { "description": "", "methods": [], "displayName": "FormLayout", "props": { "onSubmit": { "required": true, "tsType": { "name": "signature", "type": "function", "raw": "(event: React.FormEvent<HTMLFormElement>) => void", "signature": { "arguments": [{ "type": { "name": "ReactFormEvent", "raw": "React.FormEvent<HTMLFormElement>", "elements": [{ "name": "HTMLFormElement" }] }, "name": "event" }], "return": { "name": "void" } } }, "description": "" }, "children": { "required": true, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "theme": { "required": false, "tsType": { "name": "any" }, "description": "" }, "className": { "required": false, "tsType": { "name": "string" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "style": { "required": false, "tsType": { "name": "ReactCSSProperties", "raw": "React.CSSProperties" }, "description": "" }, "layout": { "required": true, "tsType": { "name": "union", "raw": "'flex' | 'grid'", "elements": [{ "name": "literal", "value": "'flex'" }, { "name": "literal", "value": "'grid'" }] }, "description": "" }, "layoutConfig": { "required": false, "tsType": { "name": "any" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" } } };


/***/ })

});
//# sourceMappingURL=src_index_ts.ef502519b49148cea07a.hot-update.js.map