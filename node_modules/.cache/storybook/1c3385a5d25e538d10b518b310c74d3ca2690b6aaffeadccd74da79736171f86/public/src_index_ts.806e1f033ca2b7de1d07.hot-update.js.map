{"version":3,"file":"src_index_ts.806e1f033ca2b7de1d07.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AAMA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;ACCA;AAAA;AAAA","sources":["webpack://@matthew.ngo/react-dynamic-form/./src/features/form-renderer/components/FormLayout.tsx","webpack://@matthew.ngo/react-dynamic-form/./src/features/form-renderer/components/FormLayout.tsx?7c5e"],"sourcesContent":["// Filepath: /src/features/form-renderer/components/FormLayout.tsx\n\nimport React, { useMemo } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { defaultTheme } from '../../../theme';\nimport {\n  FormContainer,\n  GridFormContainer,\n} from '../../../styles';\n\n\nconst FormLayout: React.FC<FormLayoutProps> = ({\n  onSubmit,\n  children,\n  className,\n  formClassNameConfig,\n  style,\n  layout,\n  layoutConfig,\n  horizontalLabel,\n  theme,\n}) => {\n  const mergedTheme = useMemo(() => {\n    return theme ? { ...defaultTheme, ...theme } : defaultTheme;\n  }, [theme]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmit(event);\n  };\n\n  const LayoutComponent: React.ComponentType<LayoutComponentProps> =\n    layout === 'grid' ? GridFormContainer : FormContainer;\n\n  const layoutComponentProps: LayoutComponentProps = {\n    onSubmit: handleSubmit,\n    className: `${className || ''} ${formClassNameConfig?.formContainer || ''}`,\n    style,\n    $layout: layout,\n    $layoutConfig: layoutConfig,\n    $horizontalLabel: horizontalLabel,\n    $minWidth: layoutConfig?.minWidth,\n    $gap: layoutConfig?.gap,\n    $breakpoints: layoutConfig?.breakpoints,\n  };\n\n  return (\n    <ThemeProvider theme={mergedTheme}>\n      <LayoutComponent {...layoutComponentProps}>{children}</LayoutComponent>\n    </ThemeProvider>\n  );\n};\n\nexport default FormLayout;\n","// Filepath: /src/features/form-renderer/components/FormLayout.tsx\n\nimport React, { useMemo } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { defaultTheme } from '../../../theme';\nimport {\n  FormContainer,\n  GridFormContainer,\n} from '../../../styles';\n\n\nconst FormLayout: React.FC<FormLayoutProps> = ({\n  onSubmit,\n  children,\n  className,\n  formClassNameConfig,\n  style,\n  layout,\n  layoutConfig,\n  horizontalLabel,\n  theme,\n}) => {\n  const mergedTheme = useMemo(() => {\n    return theme ? { ...defaultTheme, ...theme } : defaultTheme;\n  }, [theme]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmit(event);\n  };\n\n  const LayoutComponent: React.ComponentType<LayoutComponentProps> =\n    layout === 'grid' ? GridFormContainer : FormContainer;\n\n  const layoutComponentProps: LayoutComponentProps = {\n    onSubmit: handleSubmit,\n    className: `${className || ''} ${formClassNameConfig?.formContainer || ''}`,\n    style,\n    $layout: layout,\n    $layoutConfig: layoutConfig,\n    $horizontalLabel: horizontalLabel,\n    $minWidth: layoutConfig?.minWidth,\n    $gap: layoutConfig?.gap,\n    $breakpoints: layoutConfig?.breakpoints,\n  };\n\n  return (\n    <ThemeProvider theme={mergedTheme}>\n      <LayoutComponent {...layoutComponentProps}>{children}</LayoutComponent>\n    </ThemeProvider>\n  );\n};\n\nexport default FormLayout;\n;FormLayout.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"FormLayout\"};FormLayout.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"FormLayout\"}"],"names":[],"sourceRoot":""}