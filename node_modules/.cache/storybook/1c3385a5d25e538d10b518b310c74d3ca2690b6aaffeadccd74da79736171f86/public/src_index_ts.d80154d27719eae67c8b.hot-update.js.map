{"version":3,"file":"src_index_ts.d80154d27719eae67c8b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AAEA;;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAOA;AACA;AACA;AAKA;AAQA;AAEA;ACCA;AAAA;AAAA","sources":["webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/TextInput.tsx","webpack://@matthew.ngo/react-dynamic-form/./src/features/inputs/components/TextInput.tsx?de1a"],"sourcesContent":["// Filepath: /src/features/inputs/components/TextInput.tsx\nimport React from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { CommonInputProps } from '../types';\nimport { FormValues } from '../../dynamic-form';\nimport { useTheme } from '../../../theme/ThemeProvider';\nimport { Input, Label, InputWrapper } from '../../../styles';\n\nconst TextInput: React.FC<CommonInputProps> = ({\n  id,\n  fieldConfig,\n  formClassNameConfig = {},\n  disableAutocomplete,\n  horizontalLabel,\n  labelWidth,\n}) => {\n  const theme = useTheme();\n  const { label } = fieldConfig;\n  const { control } = useFormContext<FormValues>();\n  const { field } = useController({\n    name: id,\n    control,\n    rules: fieldConfig.validation,\n    defaultValue: fieldConfig.defaultValue,\n  });\n\n  return (\n    <InputWrapper\n      $horizontalLabel={horizontalLabel}\n      $labelWidth={labelWidth}\n      className={formClassNameConfig.inputWrapper}\n    >\n      {label && (\n        <Label\n          htmlFor={id}\n          $horizontalLabel={horizontalLabel}\n          $labelWidth={labelWidth}\n          className={formClassNameConfig.label}\n        >\n          {label}\n          {fieldConfig.validation?.required &&\n            typeof fieldConfig.validation.required === 'object' && (\n              <span style={{ color: theme.colors.danger }}>*</span>\n            )}\n        </Label>\n      )}\n      <Input\n        {...field}\n        className={formClassNameConfig.input}\n        id={id}\n        autoComplete={disableAutocomplete ? 'off' : undefined}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default TextInput;\n","// Filepath: /src/features/inputs/components/TextInput.tsx\nimport React from 'react';\nimport { useFormContext, useController } from 'react-hook-form';\nimport { CommonInputProps } from '../types';\nimport { FormValues } from '../../dynamic-form';\nimport { useTheme } from '../../../theme/ThemeProvider';\nimport { Input, Label, InputWrapper } from '../../../styles';\n\nconst TextInput: React.FC<CommonInputProps> = ({\n  id,\n  fieldConfig,\n  formClassNameConfig = {},\n  disableAutocomplete,\n  horizontalLabel,\n  labelWidth,\n}) => {\n  const theme = useTheme();\n  const { label } = fieldConfig;\n  const { control } = useFormContext<FormValues>();\n  const { field } = useController({\n    name: id,\n    control,\n    rules: fieldConfig.validation,\n    defaultValue: fieldConfig.defaultValue,\n  });\n\n  return (\n    <InputWrapper\n      $horizontalLabel={horizontalLabel}\n      $labelWidth={labelWidth}\n      className={formClassNameConfig.inputWrapper}\n    >\n      {label && (\n        <Label\n          htmlFor={id}\n          $horizontalLabel={horizontalLabel}\n          $labelWidth={labelWidth}\n          className={formClassNameConfig.label}\n        >\n          {label}\n          {fieldConfig.validation?.required &&\n            typeof fieldConfig.validation.required === 'object' && (\n              <span style={{ color: theme.colors.danger }}>*</span>\n            )}\n        </Label>\n      )}\n      <Input\n        {...field}\n        className={formClassNameConfig.input}\n        id={id}\n        autoComplete={disableAutocomplete ? 'off' : undefined}\n      />\n    </InputWrapper>\n  );\n};\n\nexport default TextInput;\n;TextInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"TextInput\",\"props\":{\"id\":{\"required\":true,\"tsType\":{\"name\":\"string\"},\"description\":\"The ID of the input.\"},\"fieldConfig\":{\"required\":true,\"tsType\":{\"name\":\"FieldConfig\"},\"description\":\"The field configuration.\"},\"formClassNameConfig\":{\"required\":false,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"Optional CSS class names for form elements.\",\"defaultValue\":{\"value\":\"{}\",\"computed\":false}},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to show inline error messages.\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to use a horizontal label.\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"Optional label width (for horizontal labels).\"},\"error\":{\"required\":false,\"tsType\":{\"name\":\"FieldError\"},\"description\":\"The field error (if any).\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to disable autocomplete for the input.\"}}};TextInput.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"TextInput\",\"props\":{\"id\":{\"required\":true,\"tsType\":{\"name\":\"string\"},\"description\":\"The ID of the input.\"},\"fieldConfig\":{\"required\":true,\"tsType\":{\"name\":\"FieldConfig\"},\"description\":\"The field configuration.\"},\"formClassNameConfig\":{\"required\":false,\"tsType\":{\"name\":\"FormClassNameConfig\"},\"description\":\"Optional CSS class names for form elements.\",\"defaultValue\":{\"value\":\"{}\",\"computed\":false}},\"showInlineError\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to show inline error messages.\"},\"horizontalLabel\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to use a horizontal label.\"},\"labelWidth\":{\"required\":false,\"tsType\":{\"name\":\"union\",\"raw\":\"string | number\",\"elements\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"description\":\"Optional label width (for horizontal labels).\"},\"error\":{\"required\":false,\"tsType\":{\"name\":\"FieldError\"},\"description\":\"The field error (if any).\"},\"disableAutocomplete\":{\"required\":false,\"tsType\":{\"name\":\"boolean\"},\"description\":\"Whether to disable autocomplete for the input.\"}}}"],"names":[],"sourceRoot":""}