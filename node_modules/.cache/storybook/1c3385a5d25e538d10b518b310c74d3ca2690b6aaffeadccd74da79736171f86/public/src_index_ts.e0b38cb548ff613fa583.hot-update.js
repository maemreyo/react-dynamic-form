"use strict";
self["webpackHotUpdate_matthew_ngo_react_dynamic_form"]("src_index_ts",{

/***/ "./src/features/form-renderer/components/FormFooter.tsx":
/*!**************************************************************!*\
  !*** ./src/features/form-renderer/components/FormFooter.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../components */ "./src/components/index.ts");
// Filepath: /src/features/form-renderer/components/FormFooter.tsx


var FormFooter = function (_a) {
    var footer = _a.footer, showSubmitButton = _a.showSubmitButton, renderSubmitButton = _a.renderSubmitButton, isSubmitting = _a.isSubmitting, showErrorSummary = _a.showErrorSummary, errors = _a.errors, formClassNameConfig = _a.formClassNameConfig;
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        footer,
        showErrorSummary && Object.keys(errors).length > 0 && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.ErrorSummary, { errors: errors, formClassNameConfig: formClassNameConfig }))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FormFooter);
;
FormFooter.__docgenInfo = { "description": "", "methods": [], "displayName": "FormFooter", "props": { "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "showSubmitButton": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: () => void,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "() => void", "signature": { "arguments": [], "return": { "name": "void" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "isSubmitting": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "showErrorSummary": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "errors": { "required": true, "tsType": { "name": "Partial", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "FieldError" }], "raw": "Record<string, FieldError>" }], "raw": "Partial<Record<string, FieldError>>" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" } } };
FormFooter.__docgenInfo = { "description": "", "methods": [], "displayName": "FormFooter", "props": { "footer": { "required": false, "tsType": { "name": "ReactReactNode", "raw": "React.ReactNode" }, "description": "" }, "showSubmitButton": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "renderSubmitButton": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  handleSubmit: () => void,\n  isSubmitting: boolean\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "signature", "type": "function", "raw": "() => void", "signature": { "arguments": [], "return": { "name": "void" } } }, "name": "handleSubmit" }, { "type": { "name": "boolean" }, "name": "isSubmitting" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "isSubmitting": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "showErrorSummary": { "required": true, "tsType": { "name": "boolean" }, "description": "" }, "errors": { "required": true, "tsType": { "name": "Partial", "elements": [{ "name": "Record", "elements": [{ "name": "string" }, { "name": "FieldError" }], "raw": "Record<string, FieldError>" }], "raw": "Partial<Record<string, FieldError>>" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "" } } };


/***/ })

});
//# sourceMappingURL=src_index_ts.e0b38cb548ff613fa583.hot-update.js.map