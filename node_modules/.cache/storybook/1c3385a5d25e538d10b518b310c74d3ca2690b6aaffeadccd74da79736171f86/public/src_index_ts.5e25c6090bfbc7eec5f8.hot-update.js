"use strict";
self["webpackHotUpdate_matthew_ngo_react_dynamic_form"]("src_index_ts",{

/***/ "./src/features/dynamic-form/utils/fieldUtils.ts":
/*!*******************************************************!*\
  !*** ./src/features/dynamic-form/utils/fieldUtils.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFields: () => (/* binding */ getFields)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _inputs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../inputs/utils */ "./src/features/inputs/utils.ts");
/* harmony import */ var _validationUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validationUtils */ "./src/features/dynamic-form/utils/validationUtils.ts");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");




/**
 * Generates the form fields array based on the flattened config and form state.
 *
 * @param flattenedConfig - The flattened form configuration.
 * @param formState - The `react-hook-form` form state.
 * @param globalValidationMessages - Optional global validation messages.
 * @returns The form fields array.
 */
var getFields = function (flattenedConfig, formState, globalValidationMessages) {
    return Object.entries(flattenedConfig).map(function (_a) {
        var key = _a[0], fieldConfig = _a[1];
        // Retrieve the default value from fieldConfig
        var defaultValue = fieldConfig.defaultValue;
        var inputType = fieldConfig.type || (0,_inputs_utils__WEBPACK_IMPORTED_MODULE_0__.getInputTypeFromValue)(defaultValue);
        var fieldError = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_1__.get)(formState.errors, key);
        var errorMessage = (0,_validationUtils__WEBPACK_IMPORTED_MODULE_2__.getErrorMessage)(fieldConfig, fieldError, {}, globalValidationMessages);
        return {
            label: fieldConfig.label,
            id: key,
            type: inputType,
            error: errorMessage
                ? (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, fieldError), { message: errorMessage, type: (fieldError === null || fieldError === void 0 ? void 0 : fieldError.type) || '' }) : fieldError,
        };
    });
};


/***/ })

});
//# sourceMappingURL=src_index_ts.5e25c6090bfbc7eec5f8.hot-update.js.map