"use strict";
self["webpackHotUpdate_matthew_ngo_react_dynamic_form"]("src_index_ts",{

/***/ "./src/features/inputs/components/InputRenderer.tsx":
/*!**********************************************************!*\
  !*** ./src/features/inputs/components/InputRenderer.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _registry_InputRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../registry/InputRegistry */ "./src/features/inputs/registry/InputRegistry.ts");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var _dynamic_form_utils_formUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dynamic-form/utils/formUtils */ "./src/features/dynamic-form/utils/formUtils.ts");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");

// src/features/inputs/components/InputRenderer.tsx



 // Import hàm mergeClassNames

var InputRenderer = function (_a) {
    var field = _a.field, config = _a.config, formClassNameConfig = _a.formClassNameConfig, disableAutocomplete = _a.disableAutocomplete, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, renderErrorMessage = _a.renderErrorMessage, customInputs = _a.customInputs;
    var id = field.id, type = field.type, error = field.error;
    var fieldConfig = config[id] || {};
    var form = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_3__.useFormContext)();
    // Prioritize custom input components
    var CustomInputComponent = customInputs === null || customInputs === void 0 ? void 0 : customInputs[type];
    var RegisteredInputComponent = (0,_registry_InputRegistry__WEBPACK_IMPORTED_MODULE_1__.getInputComponent)(type);
    var InputComponent = CustomInputComponent || RegisteredInputComponent;
    // Merge class names
    var mergedFormClassNameConfig = (0,_dynamic_form_utils_formUtils__WEBPACK_IMPORTED_MODULE_4__.mergeClassNames)(fieldConfig, form.formState, {}, // Default empty object
    formClassNameConfig, fieldConfig.classNameConfig);
    var commonInputProps = {
        id: id,
        fieldConfig: fieldConfig,
        formClassNameConfig: mergedFormClassNameConfig, // Truyền mergedFormClassNameConfig thay vì formClassNameConfig
        showInlineError: showInlineError,
        horizontalLabel: horizontalLabel,
        labelWidth: labelWidth,
        error: error,
        disableAutocomplete: disableAutocomplete,
    };
    // Render error message using renderErrorMessage prop or default
    var errorMessageElement = showInlineError && error && renderErrorMessage
        ? renderErrorMessage(error, mergedFormClassNameConfig) // Sử dụng mergedFormClassNameConfig
        : showInlineError && error
            ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_2__.ErrorMessage, {
                className: mergedFormClassNameConfig.errorMessage, // Sử dụng mergedFormClassNameConfig
                children: error.message,
            })
            : null;
    if (!InputComponent) {
        console.warn("No input component found for type: ".concat(type));
        return null;
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(InputComponent, (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, commonInputProps)),
        errorMessageElement));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputRenderer);
;
InputRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "InputRenderer", "props": { "field": { "required": true, "tsType": { "name": "FormField" }, "description": "" }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "" }, "formClassNameConfig": { "required": true, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "renderLabel": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "renderErrorMessage": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  error: FieldError | undefined,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "union", "raw": "FieldError | undefined", "elements": [{ "name": "FieldError" }, { "name": "undefined" }] }, "name": "error" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "" } } };
InputRenderer.__docgenInfo = { "description": "", "methods": [], "displayName": "InputRenderer", "props": { "field": { "required": true, "tsType": { "name": "FormField" }, "description": "" }, "config": { "required": true, "tsType": { "name": "FormConfig" }, "description": "" }, "formClassNameConfig": { "required": true, "tsType": { "name": "FormClassNameConfig" }, "description": "" }, "disableAutocomplete": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "renderLabel": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  fieldConfig: FieldConfig,\n  commonInputProps: CommonInputProps\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "FieldConfig" }, "name": "fieldConfig" }, { "type": { "name": "CommonInputProps" }, "name": "commonInputProps" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "renderErrorMessage": { "required": false, "tsType": { "name": "signature", "type": "function", "raw": "(\n  error: FieldError | undefined,\n  formClassNameConfig: FormClassNameConfig | undefined\n) => React.ReactNode", "signature": { "arguments": [{ "type": { "name": "union", "raw": "FieldError | undefined", "elements": [{ "name": "FieldError" }, { "name": "undefined" }] }, "name": "error" }, { "type": { "name": "union", "raw": "FormClassNameConfig | undefined", "elements": [{ "name": "FormClassNameConfig" }, { "name": "undefined" }] }, "name": "formClassNameConfig" }], "return": { "name": "ReactReactNode", "raw": "React.ReactNode" } } }, "description": "" }, "customInputs": { "required": false, "tsType": { "name": "signature", "type": "object", "raw": "{\n  [key: string]: React.ComponentType<CustomInputProps>;\n}", "signature": { "properties": [{ "key": { "name": "string" }, "value": { "name": "ReactComponentType", "raw": "React.ComponentType<CustomInputProps>", "elements": [{ "name": "CustomInputProps" }], "required": true } }] } }, "description": "" } } };


/***/ })

});
//# sourceMappingURL=src_index_ts.5a4581ff8d318e8db6ad.hot-update.js.map