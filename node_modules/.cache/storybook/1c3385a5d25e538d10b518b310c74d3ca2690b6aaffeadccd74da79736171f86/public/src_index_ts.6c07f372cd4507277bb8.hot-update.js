"use strict";
self["webpackHotUpdate_matthew_ngo_react_dynamic_form"]("src_index_ts",{

/***/ "./src/features/inputs/components/ComboBox.tsx":
/*!*****************************************************!*\
  !*** ./src/features/inputs/components/ComboBox.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "./node_modules/react-hook-form/dist/index.esm.mjs");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../styles */ "./src/styles.ts");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
// Filepath: /src/features/inputs/components/ComboBox.tsx





var ComboBoxContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div(templateObject_1 || (templateObject_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: relative;\n  width: 100%;\n"], ["\n  position: relative;\n  width: 100%;\n"])));
var DropdownList = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].ul(templateObject_2 || (templateObject_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid ", ";\n  border-radius: 8px; /* Bo tr\u00F2n */\n  background-color: white;\n  z-index: 10;\n  list-style: none;\n  padding: 0;\n  margin: 4px 0 0 0;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow:\n    0px 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0px 2px 4px -1px rgba(0, 0, 0, 0.06);\n"], ["\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid ", ";\n  border-radius: 8px; /* Bo tr\u00F2n */\n  background-color: white;\n  z-index: 10;\n  list-style: none;\n  padding: 0;\n  margin: 4px 0 0 0;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow:\n    0px 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0px 2px 4px -1px rgba(0, 0, 0, 0.06);\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors.border;
});
var DropdownItem = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].li(templateObject_3 || (templateObject_3 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__makeTemplateObject)(["\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  cursor: pointer;\n  &:hover {\n    background-color: ", ";\n  }\n  &.selected {\n    background-color: ", ";\n    color: white;\n  }\n"], ["\n  padding: 8px 12px; /* Gi\u1EA3m padding */\n  cursor: pointer;\n  &:hover {\n    background-color: ", ";\n  }\n  &.selected {\n    background-color: ", ";\n    color: white;\n  }\n"])), function (_a) {
    var theme = _a.theme;
    return theme.colors['light-500'];
}, function (_a) {
    var theme = _a.theme;
    return theme.colors.info;
});
var ComboBox = function (_a) {
    var _b;
    var id = _a.id, fieldConfig = _a.fieldConfig, _c = _a.formClassNameConfig, formClassNameConfig = _c === void 0 ? {} : _c, showInlineError = _a.showInlineError, horizontalLabel = _a.horizontalLabel, labelWidth = _a.labelWidth, error = _a.error;
    var label = fieldConfig.label, options = fieldConfig.options;
    var _d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), isOpen = _d[0], setIsOpen = _d[1];
    var _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''), inputValue = _e[0], setInputValue = _e[1];
    var _f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1), highlightedIndex = _f[0], setHighlightedIndex = _f[1];
    var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    var control = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useFormContext)().control;
    var field = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_4__.useController)({
        name: id,
        control: control,
        rules: fieldConfig.validation,
    }).field;
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        setInputValue(field.value || '');
    }, [field.value]);
    var filteredOptions = options
        ? options.filter(function (option) {
            return option.label.toLowerCase().includes(inputValue.toLowerCase());
        })
        : [];
    var handleInputChange = function (event) {
        var val = event.target.value;
        setInputValue(val);
        field.onChange(event); // Update form state
        if (!isOpen && val) {
            setIsOpen(true);
        }
        else if (isOpen && !val) {
            setIsOpen(false);
        }
    };
    var handleOptionClick = function (value) {
        setInputValue(value);
        field.onChange(value); // Update form state
        setIsOpen(false);
    };
    var toggleDropdown = function () {
        setIsOpen(!isOpen);
    };
    var closeDropdown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {
        setIsOpen(false);
    }, []);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        var handleClickOutside = function (event) {
            if (containerRef.current &&
                !containerRef.current.contains(event.target)) {
                closeDropdown();
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        return function () { return document.removeEventListener('mousedown', handleClickOutside); };
    }, [closeDropdown]);
    var handleKeyDown = function (event) {
        if (event.key === 'ArrowDown') {
            event.preventDefault();
            setHighlightedIndex(function (prevIndex) {
                return filteredOptions.length > 0
                    ? Math.min(prevIndex + 1, filteredOptions.length - 1)
                    : -1;
            });
        }
        else if (event.key === 'ArrowUp') {
            event.preventDefault();
            setHighlightedIndex(function (prevIndex) {
                return prevIndex > 0 ? prevIndex - 1 : filteredOptions.length - 1;
            });
        }
        else if (event.key === 'Enter') {
            event.preventDefault();
            if (highlightedIndex >= 0) {
                var selectedValue = filteredOptions[highlightedIndex].value;
                setInputValue(selectedValue);
                field.onChange(selectedValue); // Update form state
                setIsOpen(false);
            }
        }
        else if (event.key === 'Escape') {
            event.preventDefault();
            setIsOpen(false);
        }
    };
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
        if (isOpen && highlightedIndex >= 0 && containerRef.current) {
            var item = containerRef.current.querySelector("li:nth-child(".concat(highlightedIndex + 1, ")"));
            if (item) {
                item.scrollIntoView({ block: 'nearest', inline: 'start' });
            }
        }
    }, [isOpen, highlightedIndex]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.InputWrapper, { "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.inputWrapper },
        label && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Label, { htmlFor: id, "$horizontalLabel": horizontalLabel, "$labelWidth": labelWidth, className: formClassNameConfig.label },
            label,
            ((_b = fieldConfig.validation) === null || _b === void 0 ? void 0 : _b.required) && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { style: { color: 'red' } }, "*")))),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ComboBoxContainer, { ref: containerRef, className: formClassNameConfig.comboBoxContainer },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.Input, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, field, { className: formClassNameConfig.comboBox, id: id, value: inputValue, onChange: handleInputChange, onClick: toggleDropdown, onKeyDown: handleKeyDown, autoComplete: "off" })),
            isOpen && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownList, { className: formClassNameConfig.comboBoxDropdownList }, filteredOptions.length > 0 ? (filteredOptions.map(function (option, index) { return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownItem, { key: option.value, onClick: function () { return handleOptionClick(option.value); }, className: "".concat(index === highlightedIndex ? 'selected' : '', " ").concat(formClassNameConfig.comboBoxDropdownItem) }, option.label)); })) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropdownItem, { className: formClassNameConfig.comboBoxDropdownItem }, "No results found"))))),
        showInlineError && error && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_styles__WEBPACK_IMPORTED_MODULE_1__.ErrorMessage, { className: formClassNameConfig.errorMessage }, error.message))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ComboBox);
;
ComboBox.__docgenInfo = { "description": "", "methods": [], "displayName": "ComboBox", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "" }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "" } } };
ComboBox.__docgenInfo = { "description": "", "methods": [], "displayName": "ComboBox", "props": { "id": { "required": true, "tsType": { "name": "string" }, "description": "" }, "fieldConfig": { "required": true, "tsType": { "name": "FieldConfig" }, "description": "" }, "formClassNameConfig": { "required": false, "tsType": { "name": "FormClassNameConfig" }, "description": "", "defaultValue": { "value": "{}", "computed": false } }, "showInlineError": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "horizontalLabel": { "required": false, "tsType": { "name": "boolean" }, "description": "" }, "labelWidth": { "required": false, "tsType": { "name": "union", "raw": "string | number", "elements": [{ "name": "string" }, { "name": "number" }] }, "description": "" }, "error": { "required": false, "tsType": { "name": "FieldError" }, "description": "" } } };
var templateObject_1, templateObject_2, templateObject_3;


/***/ })

});
//# sourceMappingURL=src_index_ts.6c07f372cd4507277bb8.hot-update.js.map