{"code":"// Filepath: /src/features/inputs/components/InputRenderer.tsx\nimport React from 'react';\nimport { getInputComponent } from '../registry/InputRegistry';\nimport { ErrorMessage } from '../../../styles';\nconst InputRenderer = ({ field, config, formClassNameConfig, disableAutocomplete, showInlineError, horizontalLabel, labelWidth, renderErrorMessage, customInputs, }) => {\n    const { id, type, error } = field;\n    const fieldConfig = config[id] || {};\n    // Prioritize custom input components\n    const CustomInputComponent = customInputs?.[type];\n    const RegisteredInputComponent = getInputComponent(type);\n    const InputComponent = CustomInputComponent || RegisteredInputComponent;\n    const commonInputProps = {\n        id,\n        fieldConfig,\n        formClassNameConfig,\n        showInlineError,\n        horizontalLabel,\n        labelWidth,\n        error,\n        disableAutocomplete,\n    };\n    // Render error message using renderErrorMessage prop or default\n    const errorMessageElement = showInlineError && error && renderErrorMessage\n        ? renderErrorMessage(error, formClassNameConfig)\n        : showInlineError && error\n            ? React.createElement(ErrorMessage, {\n                className: fieldConfig.classNameConfig?.errorMessage ||\n                    formClassNameConfig?.errorMessage,\n                children: error.message,\n            })\n            : null;\n    if (!InputComponent) {\n        console.warn(`No input component found for type: ${type}`);\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputComponent, { ...commonInputProps }),\n        errorMessageElement));\n};\nexport default InputRenderer;\n","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/@types/react/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/dynamic-form/types.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/inputs/registry/InputRegistry.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/inputs/types.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/styles.ts"]}
