{"code":"// Filepath: /src/features/form-renderer/FormRenderer.tsx\n// @ts-nocheck\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { FormLayout, FormContent, FormFooter } from './components';\nconst FormRenderer = ({ onSubmit, className, formClassNameConfig = {}, style, layout = 'grid', layoutConfig, horizontalLabel, theme, header, fieldsToRender, fields, config, footer, showSubmitButton = true, renderSubmitButton, showErrorSummary = false, labelWidth, disableAutocomplete, showInlineError, renderFormContent, renderFormFooter, customInputs, }) => {\n    const form = useFormContext();\n    const { formState, handleSubmit } = form;\n    const content = renderFormContent ? (renderFormContent({\n        fieldsToRender,\n        fields,\n        config,\n        formClassNameConfig,\n        horizontalLabel,\n        labelWidth,\n        disableAutocomplete,\n        showInlineError,\n        conditionalFieldsConfig: [],\n        renderInput: (field, fieldConfig, commonInputProps) => React.createElement(React.Fragment, null),\n    })) : (React.createElement(FormContent, { fieldsToRender: fieldsToRender, fields: fields, config: config, formClassNameConfig: formClassNameConfig, horizontalLabel: horizontalLabel, labelWidth: labelWidth, disableAutocomplete: disableAutocomplete, showInlineError: showInlineError, conditionalFieldsConfig: [], customInputs: customInputs }));\n    const footerContent = renderFormFooter ? (renderFormFooter({\n        footer,\n        showSubmitButton,\n        renderSubmitButton: renderSubmitButton,\n        isSubmitting: formState.isSubmitting,\n        showErrorSummary,\n        errors: formState.errors,\n        formClassNameConfig,\n    })) : (React.createElement(FormFooter, { footer: footer, formClassNameConfig: formClassNameConfig, showSubmitButton: showSubmitButton, renderSubmitButton: renderSubmitButton, isSubmitting: formState.isSubmitting, showErrorSummary: showErrorSummary, errors: formState.errors }));\n    return (React.createElement(FormLayout, { onSubmit: handleSubmit(onSubmit), className: className, formClassNameConfig: formClassNameConfig, style: style, layout: layout, layoutConfig: layoutConfig, horizontalLabel: horizontalLabel, theme: theme },\n        header,\n        content,\n        footerContent));\n};\nexport default FormRenderer;\n","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/@types/react/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/react-hook-form/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/dynamic-form/index.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/form-renderer/components/index.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/form-renderer/types.ts"],"dts":{"name":"/Users/matthewngo/Documents/dev/projects/react-dynamic-form/features/form-renderer/FormRenderer.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { FormRendererProps } from './types';\ndeclare const FormRenderer: React.FC<FormRendererProps>;\nexport default FormRenderer;\n"}}
