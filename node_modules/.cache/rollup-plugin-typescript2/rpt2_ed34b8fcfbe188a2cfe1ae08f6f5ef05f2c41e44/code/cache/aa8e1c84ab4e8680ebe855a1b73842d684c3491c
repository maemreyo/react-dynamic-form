{"code":"// src/theme/ThemeProvider.tsx\nimport React, { createContext, useContext } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { defaultTheme } from './index';\n/**\n * The theme context.\n */\nexport const AppThemeContext = createContext(defaultTheme);\n/**\n * Custom hook to access the theme context.\n *\n * @returns The theme object.\n */\nexport const useTheme = () => useContext(AppThemeContext);\nconst ThemeProvider = ({ children, theme }) => {\n    const mergedTheme = theme ? { ...defaultTheme, ...theme } : defaultTheme;\n    return (React.createElement(AppThemeContext.Provider, { value: mergedTheme },\n        React.createElement(StyledThemeProvider, { theme: mergedTheme }, children)));\n};\nexport default ThemeProvider;\n","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/@types/react/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/styled-components/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/theme/index.ts"]}
