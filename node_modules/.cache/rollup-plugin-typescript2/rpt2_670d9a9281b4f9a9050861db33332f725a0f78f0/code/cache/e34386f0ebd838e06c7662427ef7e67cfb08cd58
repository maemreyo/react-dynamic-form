{"code":"/**\n * Flattens a nested object into a single-level object.\n *\n * @param obj - The object to flatten.\n * @param parentKey - The parent key (used for recursion).\n * @param result - The resulting flattened object.\n * @returns The flattened object.\n */\nexport const flattenObject = (obj, parentKey = '', result = {}) => {\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            const newKey = parentKey ? `${parentKey}.${key}` : key;\n            if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                flattenObject(obj[key], newKey, result);\n            }\n            else {\n                result[newKey] = obj[key];\n            }\n        }\n    }\n    return result;\n};\n/**\n * Flattens a nested config object into a single-level object.\n *\n * @param config - The config object to flatten.\n * @param parentKey - The parent key (used for recursion).\n * @param result - The resulting flattened config object.\n * @returns The flattened config object.\n */\nexport const flattenConfig = (config, parentKey = '', result = {}) => {\n    for (const key in config) {\n        if (Object.prototype.hasOwnProperty.call(config, key)) {\n            const newKey = parentKey ? `${parentKey}.${key}` : key;\n            const fieldConfig = config[key];\n            if (fieldConfig.fields) {\n                flattenConfig(fieldConfig.fields, newKey, result);\n            }\n            else {\n                result[newKey] = fieldConfig;\n            }\n        }\n    }\n    return result;\n};\n/**\n * Debounces a function.\n *\n * @param func - The function to debounce.\n * @param wait - The debounce time in milliseconds.\n * @returns The debounced function.\n */\nexport const debounce = (func, wait) => {\n    let timeout;\n    return function (...args) {\n        const later = () => {\n            timeout = null;\n            func(...args);\n        };\n        if (timeout)\n            clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n/**\n * Saves data to localStorage.\n *\n * @param key - The key to store the data under.\n * @param data - The data to store.\n */\nexport const saveToLocalStorage = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n};\n/**\n * Loads data from localStorage.\n *\n * @param key - The key to load the data from.\n * @returns The loaded data, or null if no data is found.\n */\nexport const loadFromLocalStorage = (key) => {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n};\n//# sourceMappingURL=formUtils.js.map","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/dynamic-form/types.ts"],"map":"{\"version\":3,\"file\":\"formUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/features/dynamic-form/utils/formUtils.ts\"],\"names\":[],\"mappings\":\"AAGA;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,GAAwB,EACxB,SAAS,GAAG,EAAE,EACd,SAA8B,EAAE,EACX,EAAE;IACvB,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;YACnD,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YACvD,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC7D,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAC1C,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,MAAkB,EAClB,SAAS,GAAG,EAAE,EACd,SAAqB,EAAE,EACX,EAAE;IACd,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC;YACtD,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YACvD,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC;gBACvB,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YACpD,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC;YAC/B,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAc,EAAE,IAAY,EAAE,EAAE;IACvD,IAAI,OAA8B,CAAC;IACnC,OAAO,UAAU,GAAG,IAAW;QAC7B,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC;QACF,IAAI,OAAO;YAAE,YAAY,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,GAAW,EAAE,IAAS,EAAE,EAAE;IAC3D,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,GAAW,EAAc,EAAE;IAC9D,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,CAAC,CAAC\"}","dts":{"name":"/Users/matthewngo/Documents/dev/projects/react-dynamic-form/features/dynamic-form/utils/formUtils.d.ts","writeByteOrderMark":false,"text":"import { FormConfig } from '../types';\n/**\n * Flattens a nested object into a single-level object.\n *\n * @param obj - The object to flatten.\n * @param parentKey - The parent key (used for recursion).\n * @param result - The resulting flattened object.\n * @returns The flattened object.\n */\nexport declare const flattenObject: (obj: Record<string, any>, parentKey?: string, result?: Record<string, any>) => Record<string, any>;\n/**\n * Flattens a nested config object into a single-level object.\n *\n * @param config - The config object to flatten.\n * @param parentKey - The parent key (used for recursion).\n * @param result - The resulting flattened config object.\n * @returns The flattened config object.\n */\nexport declare const flattenConfig: (config: FormConfig, parentKey?: string, result?: FormConfig) => FormConfig;\n/**\n * Debounces a function.\n *\n * @param func - The function to debounce.\n * @param wait - The debounce time in milliseconds.\n * @returns The debounced function.\n */\nexport declare const debounce: (func: Function, wait: number) => (...args: any[]) => void;\n/**\n * Saves data to localStorage.\n *\n * @param key - The key to store the data under.\n * @param data - The data to store.\n */\nexport declare const saveToLocalStorage: (key: string, data: any) => void;\n/**\n * Loads data from localStorage.\n *\n * @param key - The key to load the data from.\n * @returns The loaded data, or null if no data is found.\n */\nexport declare const loadFromLocalStorage: (key: string) => any | null;\n"}}
