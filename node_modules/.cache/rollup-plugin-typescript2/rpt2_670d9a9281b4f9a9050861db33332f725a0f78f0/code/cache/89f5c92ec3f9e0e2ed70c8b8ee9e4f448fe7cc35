{"code":"// src/features/inputs/components/NumberInput.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Input, Label, ErrorMessage, InputWrapper } from '../../../styles';\nimport styled from 'styled-components';\nimport { useFormContext, useController } from 'react-hook-form';\nconst NumberInputContainer = styled.div `\n  display: flex;\n  align-items: center;\n  width: fit-content;\n\n  input {\n    text-align: center;\n    padding-right: 0;\n    width: 100px;\n  }\n`;\nconst SpinButton = styled.button `\n  background: none;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  padding: 0 8px;\n  height: 100%;\n  font-size: 1rem;\n  line-height: 0;\n  color: ${({ theme }) => theme.colors.text};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.background};\n  }\n  &:disabled {\n    cursor: default;\n    background-color: #efefef;\n  }\n  &:first-of-type {\n    border-radius: 4px 0 0 4px;\n    border-right: none;\n  }\n\n  &:last-of-type {\n    border-radius: 0 4px 4px 0;\n    border-left: none;\n  }\n`;\nconst NumberInput = ({ id, fieldConfig, formClassNameConfig, disableAutocomplete, showInlineError, horizontalLabel, labelWidth, error, }) => {\n    const { label } = fieldConfig;\n    const fieldClassNameConfig = fieldConfig.classNameConfig || {};\n    const formClassName = formClassNameConfig || {};\n    const { control } = useFormContext();\n    const { field } = useController({\n        name: id,\n        control,\n        rules: fieldConfig.validation,\n        defaultValue: fieldConfig.defaultValue,\n    });\n    const [internalValue, setInternalValue] = useState(+field.value || 0);\n    const clampValue = useCallback((value) => {\n        const { min, max } = fieldConfig.validation || {};\n        let clampedValue = value;\n        if (min !== undefined && typeof min === 'object' && value < +min.value) {\n            clampedValue = +min.value;\n        }\n        if (max !== undefined && typeof max === 'object' && value > +max.value) {\n            clampedValue = +max.value;\n        }\n        return clampedValue;\n    }, [fieldConfig.validation]);\n    useEffect(() => {\n        setInternalValue(+field.value || 0);\n    }, [field.value]);\n    const handleIncrement = () => {\n        const newValue = clampValue(internalValue + 1);\n        setInternalValue(newValue);\n        field.onChange(newValue);\n    };\n    const handleDecrement = () => {\n        const newValue = clampValue(internalValue - 1);\n        setInternalValue(newValue);\n        field.onChange(newValue);\n    };\n    return (React.createElement(InputWrapper, { \"$horizontalLabel\": horizontalLabel, \"$labelWidth\": labelWidth, className: fieldClassNameConfig.inputWrapper || formClassName.inputWrapper },\n        label && (React.createElement(Label, { htmlFor: id, \"$horizontalLabel\": horizontalLabel, \"$labelWidth\": labelWidth, className: fieldClassNameConfig.label || formClassName.label },\n            label,\n            fieldConfig.validation?.required && (React.createElement(\"span\", { style: { color: 'red' } }, \"*\")))),\n        React.createElement(NumberInputContainer, null,\n            React.createElement(SpinButton, { type: \"button\", onClick: handleDecrement, disabled: fieldConfig.validation?.min !== undefined &&\n                    typeof fieldConfig.validation.min === 'object' &&\n                    internalValue <= +fieldConfig.validation.min.value }, \"-\"),\n            React.createElement(Input, { ...field, className: fieldClassNameConfig.input || formClassName.input, type: \"number\", id: id, onChange: (e) => {\n                    field.onChange(e);\n                    setInternalValue(+e.target.value);\n                }, onBlur: (e) => {\n                    field.onBlur();\n                    const clampedValue = clampValue(+e.target.value);\n                    setInternalValue(clampedValue);\n                    field.onChange(clampedValue);\n                }, value: internalValue, autoComplete: disableAutocomplete ? 'off' : undefined }),\n            React.createElement(SpinButton, { type: \"button\", onClick: handleIncrement, disabled: fieldConfig.validation?.max !== undefined &&\n                    typeof fieldConfig.validation.max === 'object' &&\n                    internalValue >= +fieldConfig.validation.max.value }, \"+\")),\n        showInlineError && error && (React.createElement(ErrorMessage, { className: fieldClassNameConfig.errorMessage || formClassName.errorMessage }, error.message))));\n};\nexport default NumberInput;\n//# sourceMappingURL=NumberInput.js.map","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/@types/react/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/styles.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/dynamic-form/index.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/styled-components/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/react-hook-form/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/inputs/types.ts"],"map":"{\"version\":3,\"file\":\"NumberInput.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/features/inputs/components/NumberInput.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/matthewngo/Documents/dev/projects/react-dynamic-form/features/inputs/components/NumberInput.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { CommonInputProps } from '../types';\ninterface NumberInputProps extends CommonInputProps {\n}\ndeclare const NumberInput: React.FC<NumberInputProps>;\nexport default NumberInput;\n"}}
