{"code":"export {};\n//# sourceMappingURL=types.js.map","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/react-hook-form/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/features/dynamic-form/types.ts"],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/features/form-renderer/types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/matthewngo/Documents/dev/projects/react-dynamic-form/features/form-renderer/types.d.ts","writeByteOrderMark":false,"text":"import { UseFormRegister, UseFormUnregister } from 'react-hook-form';\nimport { FormField, FormConfig, FormClassNameConfig, Condition, RenderInputProps, DynamicFormProps, FieldErrors, FormValues } from '../dynamic-form/types';\n/**\n * Props for FormRenderer component.\n */\nexport interface FormRendererProps extends DynamicFormProps {\n    fieldsToRender: string[];\n    fields: FormField[];\n    conditionalFieldsConfig: Condition[];\n}\n/**\n * Props for FormContent component.\n */\nexport interface FormContentProps {\n    fields: FormField[];\n    fieldsToRender: string[];\n    config: FormConfig;\n    formClassNameConfig?: FormClassNameConfig;\n    horizontalLabel?: boolean;\n    labelWidth?: string | number;\n    disableAutocomplete?: boolean;\n    showInlineError?: boolean;\n    conditionalFieldsConfig: Condition[];\n    renderInput?: RenderInputProps;\n    register: UseFormRegister<FormValues>;\n    unregister: UseFormUnregister<FormValues>;\n}\n/**\n * Props for FormFooter component.\n */\nexport interface FormFooterProps {\n    footer?: React.ReactNode;\n    showSubmitButton: boolean;\n    renderSubmitButton?: (handleSubmit: () => void, isSubmitting: boolean) => React.ReactNode;\n    isSubmitting: boolean;\n    showErrorSummary: boolean;\n    errors: FieldErrors;\n    formClassNameConfig?: FormClassNameConfig;\n}\n"}}
