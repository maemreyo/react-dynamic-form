{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// src/theme/ThemeProvider.tsx\nimport { createContext, useContext } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { defaultTheme } from './index';\n/**\n * The theme context.\n */\nexport const AppThemeContext = createContext(defaultTheme);\n/**\n * Custom hook to access the theme context.\n *\n * @returns The theme object.\n */\nexport const useTheme = () => useContext(AppThemeContext);\nconst ThemeProvider = ({ children, theme }) => {\n    const mergedTheme = theme ? { ...defaultTheme, ...theme } : defaultTheme;\n    return (_jsx(AppThemeContext.Provider, { value: mergedTheme, children: _jsx(StyledThemeProvider, { theme: mergedTheme, children: children }) }));\n};\nexport default ThemeProvider;\n//# sourceMappingURL=ThemeProvider.js.map","references":["/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/@types/react/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/node_modules/styled-components/dist/index.d.ts","/Users/matthewngo/Documents/dev/projects/react-dynamic-form/src/theme/index.ts"],"map":"{\"version\":3,\"file\":\"ThemeProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/theme/ThemeProvider.tsx\"],\"names\":[],\"mappings\":\";AAAA,8BAA8B;AAC9B,OAAc,EAAM,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC7D,OAAO,EAAE,aAAa,IAAI,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;AAE3D;;;;GAIG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAU1D,MAAM,aAAa,GAA2B,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE;IACpE,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,YAAY,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;IAEzE,OAAO,CACL,KAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,WAAW,YAC1C,KAAC,mBAAmB,IAAC,KAAK,EAAE,WAAW,YAAG,QAAQ,GAAuB,GAChD,CAC5B,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC\"}","dts":{"name":"/Users/matthewngo/Documents/dev/projects/react-dynamic-form/dist/theme/ThemeProvider.d.ts","writeByteOrderMark":false,"text":"import React, { FC } from 'react';\n/**\n * The theme context.\n */\nexport declare const AppThemeContext: React.Context<import(\"styled-components\").DefaultTheme>;\n/**\n * Custom hook to access the theme context.\n *\n * @returns The theme object.\n */\nexport declare const useTheme: () => import(\"styled-components\").DefaultTheme;\n/**\n * Theme provider component.\n */\ninterface ThemeProviderProps {\n    children: React.ReactNode;\n    theme?: any;\n}\ndeclare const ThemeProvider: FC<ThemeProviderProps>;\nexport default ThemeProvider;\n"}}
